{'hidden_layer_sizes': [(30, 90, 180, 90, 30)], 'activation': ['logistic', 'tanh', 'relu'], 'solver': ['lbfgs', 'sgd', 'adam'], 'alpha': [0.01, 0.001, 0.0001], 'learning_rate_init': [0.01, 0.001, 0.0001], 'learning_rate': ['adaptive']} 
 
 {'mean_fit_time': array([0.06340003, 0.36050117, 0.25360084, 0.11170042, 0.35010171,
       0.38240111, 0.12680042, 0.32040179, 0.27500057, 0.06590033,
       0.33210087, 0.55070162, 0.0624001 , 0.31900096, 0.10140038,
       0.05660033, 0.74690259, 0.33810103, 0.0624001 , 0.42390132,
       0.52860129, 0.06340027, 0.34620309, 0.07670057, 0.07320023,
       0.51400125, 0.53460169, 2.17190611, 0.61960208, 0.98670292,
       2.1954205 , 0.91761053, 0.32970417, 2.17950797, 0.83450234,
       0.85010242, 0.34970105, 0.54920149, 0.2687006 , 0.42290342,
       0.83590543, 0.30590105, 0.39720154, 0.84840608, 0.98420262,
       0.3831017 , 0.55800164, 0.31800091, 0.39210212, 0.94270885,
       0.36920214, 0.33520222, 0.8095032 , 0.94080794, 2.10390651,
       0.63180351, 0.94901311, 2.30901098, 1.08200359, 0.63450158,
       2.63911617, 0.82301247, 0.98190296, 1.37130439, 0.57690156,
       0.27220082, 1.23270404, 0.87520278, 0.29310083, 1.16930377,
       0.83750248, 0.85910308, 0.53021574, 0.59650159, 0.32520819,
       0.76920557, 0.85151422, 0.32850146, 0.50880277, 0.83482122,
       1.08364391]), 'std_fit_time': array([9.99927521e-04, 4.14999723e-02, 1.28800631e-01, 4.73002195e-02,
       1.56991482e-02, 6.00063801e-03, 6.23999834e-02, 1.46801353e-01,
       3.90000343e-02, 1.50012970e-03, 3.36999893e-02, 4.52101231e-01,
       2.38418579e-07, 4.68001366e-02, 2.34000683e-02, 9.80019569e-03,
       1.53003931e-02, 6.59004450e-02, 2.38418579e-07, 4.45003510e-02,
       2.77000785e-01, 1.00016594e-03, 3.99804115e-03, 1.43002272e-02,
       1.08003616e-02, 2.33999491e-02, 4.39001322e-01, 3.95001173e-02,
       8.02007914e-02, 3.16998959e-02, 4.14140224e-02, 3.42067480e-02,
       2.73033381e-02, 8.50057602e-03, 1.13002062e-02, 8.73003006e-02,
       1.41001940e-02, 9.80043411e-03, 1.50012970e-03, 1.99021101e-02,
       8.89718533e-03, 2.31003761e-02, 5.79977036e-03, 4.58042622e-02,
       1.76002979e-02, 2.23009586e-02, 4.87998724e-02, 1.66000128e-02,
       6.05012178e-02, 1.13025904e-02, 1.30007267e-02, 1.62012577e-02,
       9.00626183e-04, 2.24805713e-01, 2.63012648e-02, 4.32007313e-02,
       4.21985388e-02, 2.14404583e-01, 2.99994946e-02, 1.77100539e-01,
       2.09510326e-03, 6.41000271e-03, 1.52700543e-01, 8.21902633e-01,
       7.37003088e-02, 1.55999660e-02, 6.25902057e-01, 1.98007822e-02,
       2.59003639e-02, 9.14703012e-01, 2.59001255e-02, 9.38998461e-02,
       1.47206545e-01, 2.49001980e-02, 3.79753113e-03, 2.65202761e-01,
       3.75109911e-02, 2.06995010e-02, 8.20100307e-03, 6.40344620e-03,
       4.10065651e-02]), 'mean_score_time': array([0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.00829995,
       0.        , 0.        , 0.0078001 , 0.        , 0.00779998,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.00100005, 0.        , 0.        , 0.        ,
       0.00100005, 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.0098002 , 0.        , 0.00049996, 0.        , 0.00100005,
       0.00779986, 0.00049996, 0.        , 0.        , 0.        ,
       0.00829995, 0.        , 0.00100017, 0.        , 0.        ,
       0.01559997, 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.00049996, 0.0078001 , 0.00150001,
       0.00830007, 0.        , 0.        , 0.00049996, 0.00200021,
       0.00250006]), 'std_score_time': array([0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 8.29994678e-03, 0.00000000e+00,
       0.00000000e+00, 7.80010223e-03, 0.00000000e+00, 7.79998302e-03,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 1.00004673e-03,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 1.00004673e-03,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 5.80000877e-03, 0.00000000e+00,
       4.99963760e-04, 0.00000000e+00, 1.00004673e-03, 7.79986382e-03,
       4.99963760e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       7.30001926e-03, 0.00000000e+00, 1.00016594e-03, 0.00000000e+00,
       0.00000000e+00, 2.38418579e-07, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       4.99963760e-04, 7.80010223e-03, 5.00082970e-04, 7.29990005e-03,
       0.00000000e+00, 0.00000000e+00, 4.99963760e-04, 1.19209290e-07,
       2.50005722e-03]), 'param_activation': masked_array(data=['logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,
                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
                   0.001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001,
                   0.0001, 0.0001, 0.0001, 0.01, 0.01, 0.01, 0.01, 0.01,
                   0.01, 0.01, 0.01, 0.01, 0.001, 0.001, 0.001, 0.001,
                   0.001, 0.001, 0.001, 0.001, 0.001, 0.0001, 0.0001,
                   0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001,
                   0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,
                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
                   0.001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001,
                   0.0001, 0.0001, 0.0001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False],
       fill_value='?',
            dtype=object), 'param_hidden_layer_sizes': masked_array(data=[(30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30)],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False],
       fill_value='?',
            dtype=object), 'param_learning_rate_init': masked_array(data=[0.01, 0.01, 0.01, 0.001, 0.001, 0.001, 0.0001, 0.0001,
                   0.0001, 0.01, 0.01, 0.01, 0.001, 0.001, 0.001, 0.0001,
                   0.0001, 0.0001, 0.01, 0.01, 0.01, 0.001, 0.001, 0.001,
                   0.0001, 0.0001, 0.0001, 0.01, 0.01, 0.01, 0.001, 0.001,
                   0.001, 0.0001, 0.0001, 0.0001, 0.01, 0.01, 0.01, 0.001,
                   0.001, 0.001, 0.0001, 0.0001, 0.0001, 0.01, 0.01, 0.01,
                   0.001, 0.001, 0.001, 0.0001, 0.0001, 0.0001, 0.01,
                   0.01, 0.01, 0.001, 0.001, 0.001, 0.0001, 0.0001,
                   0.0001, 0.01, 0.01, 0.01, 0.001, 0.001, 0.001, 0.0001,
                   0.0001, 0.0001, 0.01, 0.01, 0.01, 0.001, 0.001, 0.001,
                   0.0001, 0.0001, 0.0001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False],
       fill_value='?',
            dtype=object), 'params': [{'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0001, 'solver': 'adam'}], 'split0_test_score': array([-0.39189025, -0.39541043, -0.26717579, -0.39186918, -0.52483917,
       -0.3923212 , -0.39200309, -0.51385769, -0.39640475, -0.39192147,
       -0.39700718, -3.58290384, -0.39195157, -0.58030368, -0.70939212,
       -0.39197584, -0.2851652 , -0.3921762 , -0.3919368 , -0.35410169,
       -3.79082224, -0.39186681, -0.33633641, -0.56735591, -0.39192323,
       -0.5184917 , -0.42508182, -2.38935007, -0.80053614, -1.48369697,
       -0.36332606, -1.00538641, -2.12354632, -2.44734872, -0.07536133,
       -2.22945732, -0.47810681, -0.77666687, -1.71238664, -1.12629973,
       -1.33587703, -2.16531591, -0.7804102 , -0.05648157, -1.17036319,
       -0.35242342, -0.93197115, -1.50679638, -0.73096594, -0.82911619,
       -0.86843346, -2.11564034, -0.5341418 , -0.07123999,  0.35231041,
        0.11632236, -0.92859044, -0.5919392 , -0.51110406, -0.16805909,
        0.04641556, -0.14627666, -0.6110721 , -0.00665861,  0.20935143,
        0.11090362, -0.45467134, -0.5708498 , -0.21823093,  0.5101441 ,
       -0.12918319, -0.09365113, -0.86724479,  0.03784949, -0.40073484,
       -1.64694067, -0.10721458, -1.45410232,  0.08892094, -0.29861706,
       -0.75672311]), 'split1_test_score': array([-0.14981978, -0.14696142, -0.15408462, -0.14985038, -0.12724574,
       -0.15043167, -0.14981238, -0.13861327, -0.14506939, -0.14979039,
       -0.14783324, -0.20699779, -0.14979624, -0.14995103, -0.17572935,
       -0.14980099, -0.19768949, -0.13969253, -0.14981899, -0.14572965,
       -0.04836105, -0.14981885, -0.13677473, -0.13284293, -0.14981987,
       -0.10748789, -0.11922154,  0.21791652,  0.23787435, -0.09173032,
        0.47899732,  0.24162029,  0.3371122 ,  0.43623335,  0.02595275,
        0.43565642,  0.32625215,  0.36752336,  0.00971588,  0.37411167,
        0.37490453,  0.33731305,  0.15260469, -0.17653037,  0.159251  ,
        0.24351585,  0.42821025, -0.20128085,  0.35420952,  0.22262869,
        0.35871526,  0.39312774, -0.01259427,  0.0787199 ,  0.33073659,
       -0.05267769,  0.37520824,  0.1479833 , -0.00651201, -0.10975762,
        0.18750024, -0.15331313, -0.04587583,  0.13177437,  0.18164701,
        0.0582367 ,  0.22914705,  0.12461877, -0.19336381, -0.05297838,
       -0.1096683 ,  0.04257268,  0.22408579,  0.20012697,  0.34175124,
       -0.04597245,  0.1775051 ,  0.26982315, -0.04058473, -0.07022934,
       -0.00801099]), 'mean_test_score': array([-0.27085502, -0.27118593, -0.2106302 , -0.27085978, -0.32604245,
       -0.27137644, -0.27090774, -0.32623548, -0.27073707, -0.27085593,
       -0.27242021, -1.89495082, -0.2708739 , -0.36512736, -0.44256073,
       -0.27088841, -0.24142735, -0.26593437, -0.2708779 , -0.24991567,
       -1.91959164, -0.27084283, -0.23655557, -0.35009942, -0.27087155,
       -0.31298979, -0.27215168, -1.08571677, -0.28133089, -0.78771365,
        0.05783563, -0.38188306, -0.89321706, -1.00555769, -0.02470429,
       -0.89690045, -0.07592733, -0.20457175, -0.85133538, -0.37609403,
       -0.48048625, -0.91400143, -0.31390276, -0.11650597, -0.5055561 ,
       -0.05445378, -0.25188045, -0.85403861, -0.18837821, -0.30324375,
       -0.2548591 , -0.8612563 , -0.27336804,  0.00373995,  0.3415235 ,
        0.03182234, -0.2766911 , -0.22197795, -0.25880803, -0.13890836,
        0.1169579 , -0.1497949 , -0.32847396,  0.06255788,  0.19549922,
        0.08457016, -0.11276214, -0.22311552, -0.20579737,  0.22858286,
       -0.11942574, -0.02553923, -0.3215795 ,  0.11898823, -0.0294918 ,
       -0.84645656,  0.03514526, -0.59213959,  0.0241681 , -0.1844232 ,
       -0.38236705]), 'std_test_score': array([0.12103524, 0.1242245 , 0.05654558, 0.1210094 , 0.19879672,
       0.12094476, 0.12109535, 0.18762221, 0.12566768, 0.12106554,
       0.12458697, 1.68795302, 0.12107766, 0.21517633, 0.26683139,
       0.12108742, 0.04373786, 0.12624184, 0.1210589 , 0.10418602,
       1.8712306 , 0.12102398, 0.09978084, 0.21725649, 0.12105168,
       0.20550191, 0.15293014, 1.30363329, 0.51920524, 0.69598333,
       0.42116169, 0.62350335, 1.23032926, 1.44179103, 0.05065704,
       1.33255687, 0.40217948, 0.57209512, 0.86105126, 0.7502057 ,
       0.85539078, 1.25131448, 0.46650745, 0.0600244 , 0.6648071 ,
       0.29796963, 0.6800907 , 0.65275777, 0.54258773, 0.52587244,
       0.61357436, 1.25438404, 0.26077376, 0.07497995, 0.01078691,
       0.08450003, 0.65189934, 0.36996125, 0.25229603, 0.02915074,
       0.07054234, 0.00351823, 0.28259814, 0.06921649, 0.01385221,
       0.02633346, 0.3419092 , 0.34773429, 0.01243356, 0.28156124,
       0.00975744, 0.0681119 , 0.54566529, 0.08113874, 0.37124304,
       0.80048411, 0.14235984, 0.86196274, 0.06475284, 0.11419386,
       0.37435606]), 'rank_test_score': array([39, 47, 27, 41, 58, 48, 46, 59, 37, 40, 50, 80, 43, 62, 66, 45, 31,
       36, 44, 32, 81, 38, 30, 61, 42, 55, 49, 79, 53, 70,  8, 64, 75, 78,
       13, 76, 17, 25, 72, 63, 67, 77, 56, 19, 68, 16, 33, 73, 24, 54, 34,
       74, 51, 12,  1, 10, 52, 28, 35, 21,  5, 22, 60,  7,  3,  6, 18, 29,
       26,  2, 20, 14, 57,  4, 15, 71,  9, 69, 11, 23, 65]), 'split0_train_score': array([ 1.46831492e-05, -2.78479350e-06, -4.55267874e-03,  5.13593242e-06,
       -3.69858729e-03,  3.70681709e-05, -1.96506211e-09, -3.15756038e-03,
        7.41051513e-06, -1.41747174e-06, -2.52059555e-05,  9.98964238e-01,
       -1.30156989e-05, -7.07453133e-03, -1.76324517e-02,  3.25968783e-05,
       -3.23701555e-03,  2.78585049e-05,  2.77955917e-06, -3.73344533e-04,
        8.33340431e-01,  7.47002645e-06, -8.15998217e-04, -6.00148720e-03,
        1.66878193e-05, -3.37972142e-03, -2.40274039e-04,  9.99998602e-01,
        9.99932287e-01,  9.97824325e-01,  9.99940966e-01,  9.77727921e-01,
        9.99774770e-01,  9.99949242e-01,  6.65880892e-01,  9.98302829e-01,
        9.99999741e-01,  9.99732663e-01,  9.99870950e-01,  9.99999762e-01,
        9.83165784e-01,  9.99530014e-01,  9.99999696e-01,  7.75760009e-01,
        9.91945934e-01,  9.99999630e-01,  9.99869230e-01,  9.99902232e-01,
        9.99999412e-01,  9.66235999e-01,  9.99843095e-01,  9.99999738e-01,
        6.98301990e-01,  9.89571684e-01,  9.99516282e-01,  9.98732919e-01,
        9.99994869e-01,  9.99271093e-01,  9.85520408e-01,  9.99944103e-01,
        9.99962325e-01,  2.49098521e-01,  9.91137719e-01,  9.99987829e-01,
        9.99442896e-01,  9.99863341e-01,  9.99998544e-01,  9.51424566e-01,
        9.99810565e-01,  9.99997985e-01,  1.07633997e-01,  9.98290261e-01,
        9.99998913e-01,  9.99192715e-01,  9.99873335e-01,  9.99998698e-01,
        9.76304674e-01,  9.99803211e-01,  9.99999120e-01,  2.41626738e-01,
        9.98589167e-01]), 'split1_train_score': array([-8.20132731e-06, -1.09367881e-05, -7.92388090e-05, -1.36671756e-08,
       -2.39063376e-03,  4.19877709e-05, -1.32953745e-05, -5.81142855e-04,
       -1.16648489e-04,  3.10152143e-05, -3.23448611e-05, -1.20948501e-02,
       -1.88236235e-05,  6.54316559e-05, -2.66402536e-03,  1.76433518e-05,
       -8.67441326e-03, -3.45022713e-04, -2.58427826e-05, -6.72327764e-05,
        9.95794612e-01, -2.32084781e-05, -7.52533920e-04, -1.18299243e-03,
       -3.44074250e-05, -9.16323593e-03, -3.66141011e-03,  9.99952914e-01,
        9.99125662e-01,  9.52186660e-01,  9.99981077e-01,  9.52981141e-01,
        9.99460863e-01,  9.99942285e-01,  4.27704565e-01,  9.93569245e-01,
        9.99998689e-01,  9.99274035e-01,  9.99504948e-01,  9.99998829e-01,
        9.41803899e-01,  9.99279985e-01,  9.99998632e-01,  4.39626795e-01,
        9.91143246e-01,  9.99998562e-01,  9.99267928e-01,  9.99664668e-01,
        9.99999573e-01,  9.52455380e-01,  9.99313739e-01,  9.99996309e-01,
        5.00004661e-01,  9.96911470e-01,  9.99856366e-01,  9.99195435e-01,
        9.99986662e-01,  9.99310289e-01,  9.23950396e-01,  9.99996594e-01,
        9.99641333e-01,  7.15789834e-02,  9.98084301e-01,  9.99991212e-01,
        9.98077850e-01,  9.99859330e-01,  9.99989933e-01,  8.97425007e-01,
        9.99543049e-01,  9.99994997e-01,  5.94757947e-02,  9.98532941e-01,
        9.99998797e-01,  9.99072859e-01,  9.99627175e-01,  9.99999336e-01,
        8.98379800e-01,  9.99666776e-01,  9.99996515e-01,  8.38374370e-02,
        9.97118937e-01]), 'mean_train_score': array([ 3.24091096e-06, -6.86079082e-06, -2.31595878e-03,  2.56113262e-06,
       -3.04461053e-03,  3.95279709e-05, -6.64866976e-06, -1.86935162e-03,
       -5.46189868e-05,  1.47988713e-05, -2.87754083e-05,  4.93434694e-01,
       -1.59196612e-05, -3.50454984e-03, -1.01482385e-02,  2.51201150e-05,
       -5.95571440e-03, -1.58582104e-04, -1.15316117e-05, -2.20288655e-04,
        9.14567522e-01, -7.86922580e-06, -7.84266068e-04, -3.59223982e-03,
       -8.85980285e-06, -6.27147868e-03, -1.95084207e-03,  9.99975758e-01,
        9.99528974e-01,  9.75005492e-01,  9.99961021e-01,  9.65354531e-01,
        9.99617817e-01,  9.99945763e-01,  5.46792729e-01,  9.95936037e-01,
        9.99999215e-01,  9.99503349e-01,  9.99687949e-01,  9.99999295e-01,
        9.62484842e-01,  9.99404999e-01,  9.99999164e-01,  6.07693402e-01,
        9.91544590e-01,  9.99999096e-01,  9.99568579e-01,  9.99783450e-01,
        9.99999492e-01,  9.59345690e-01,  9.99578417e-01,  9.99998023e-01,
        5.99153325e-01,  9.93241577e-01,  9.99686324e-01,  9.98964177e-01,
        9.99990765e-01,  9.99290691e-01,  9.54735402e-01,  9.99970348e-01,
        9.99801829e-01,  1.60338752e-01,  9.94611010e-01,  9.99989521e-01,
        9.98760373e-01,  9.99861336e-01,  9.99994239e-01,  9.24424786e-01,
        9.99676807e-01,  9.99996491e-01,  8.35548959e-02,  9.98411601e-01,
        9.99998855e-01,  9.99132787e-01,  9.99750255e-01,  9.99999017e-01,
        9.37342237e-01,  9.99734994e-01,  9.99997818e-01,  1.62732088e-01,
        9.97854052e-01]), 'std_train_score': array([1.14422383e-05, 4.07599732e-06, 2.23671997e-03, 2.57479980e-06,
       6.53976763e-04, 2.45980002e-06, 6.64670470e-06, 1.28820876e-03,
       6.20295019e-05, 1.62163430e-05, 3.56945283e-06, 5.05529544e-01,
       2.90396229e-06, 3.56998149e-03, 7.48421317e-03, 7.47676325e-06,
       2.71869886e-03, 1.86440609e-04, 1.43111709e-05, 1.53055878e-04,
       8.12270903e-02, 1.53392523e-05, 3.17321485e-05, 2.40924738e-03,
       2.55476222e-05, 2.89175725e-03, 1.71056803e-03, 2.28440216e-05,
       4.03312574e-04, 2.28188324e-02, 2.00556500e-05, 1.23733897e-02,
       1.56953221e-04, 3.47849615e-06, 1.19088164e-01, 2.36679204e-03,
       5.25860118e-07, 2.29313883e-04, 1.83001087e-04, 4.66336445e-07,
       2.06809424e-02, 1.25014143e-04, 5.31727800e-07, 1.68066607e-01,
       4.01343952e-04, 5.33530329e-07, 3.00651068e-04, 1.18782318e-04,
       8.05509232e-08, 6.89030958e-03, 2.64678379e-04, 1.71452013e-06,
       9.91486644e-02, 3.66989289e-03, 1.70042040e-04, 2.31257735e-04,
       4.10312520e-06, 1.95980693e-05, 3.07850058e-02, 2.62457031e-05,
       1.60496280e-04, 8.87597691e-02, 3.47329126e-03, 1.69141496e-06,
       6.82523302e-04, 2.00557485e-06, 4.30542481e-06, 2.69997793e-02,
       1.33757909e-04, 1.49396724e-06, 2.40791013e-02, 1.21339779e-04,
       5.83623663e-08, 5.99281002e-05, 1.23079951e-04, 3.19183832e-07,
       3.89624372e-02, 6.82178056e-05, 1.30232595e-06, 7.88946507e-02,
       7.35115072e-04])} 
  
 Best Estimator: 
 MLPRegressor(activation='relu', alpha=0.01, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(30, 90, 180, 90, 30), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='lbfgs', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False) 
 with 0.34152349771080903
