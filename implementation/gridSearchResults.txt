{'hidden_layer_sizes': [(30, 90, 180, 90, 30)], 'activation': ['logistic', 'tanh', 'relu'], 'solver': ['lbfgs', 'sgd', 'adam'], 'alpha': [0.03, 0.01, 0.003, 0.001], 'learning_rate_init': [0.03, 0.01, 0.003, 0.001], 'learning_rate': ['adaptive']} 
 
 {'mean_fit_time': array([  11.79804635,  671.33406317,  152.28520596,   12.19761395,
        353.45499766,  185.55089843,   12.70448768,  314.16358376,
        160.11957538,   12.10463738,  308.14696455,  154.12046611,
         14.02144003,  444.29737353,  121.77288461,   12.63083959,
        382.55397284,  133.96079886,   11.54245353,  296.80361974,
         95.83430958,   13.72933412,  303.47109735,  128.72478783,
         12.82352471,  460.55043113,  159.82578516,   13.49351239,
        379.58634853,  372.46731317,   13.25929511,  349.80857742,
        307.66366112,   11.75801635,  317.2979573 ,  782.7689923 ,
         13.2885344 ,  482.71847618,  133.56363451,   13.61458194,
        379.06443024,  386.06765509,   13.09478223,  319.98217404,
        715.71144724,   12.92100918,  297.83391964,  838.22192752,
        699.63016021, 1022.74965382,  160.3848871 ,  703.79290187,
        959.98075032,  197.40800846,  713.60453105,  963.99323153,
        247.91362894,  714.38837039,  985.05834973,  610.71124542,
        729.45347071, 1048.53844261,  186.47648799,  723.97396326,
        828.89188564,  156.91854322,  709.55696547, 1009.81419957,
        247.49724066,  706.66045439,  995.32116544,  809.73852992,
        732.3387506 , 1024.91934276,  225.49363101,  719.9518919 ,
        874.07195175,  281.6609813 ,  716.03745127,  836.98691833,
        270.51636434,  716.25311959,  985.98218524,  667.21380603,
        708.03731644,  888.52744305,  156.37035346,  702.40686238,
        823.17564631,  233.11224329,  705.33279407,  858.33372331,
        341.04456091,  745.10600257, 1032.84245765,  837.5550046 ,
        380.79984403,  377.80599737,  168.29454172,  400.70237279,
        570.15294969,   96.04046869,  404.31779313,  612.83848   ,
        181.03585792,  419.83192313,  672.34937441,  452.55166972,
        404.7710129 ,  581.55726099,   70.85125852,  417.27861702,
        613.72697031,  154.25834894,  410.74324083,  649.44910133,
        244.84155178,  418.77906716,  784.6149708 ,  399.19337773,
        412.99205518,  545.82378292,  147.75838757,  416.96808493,
        594.01390231,  123.30317354,  418.30397129,  623.40424669,
        299.54017568,  403.91045868,  704.51361501,  258.35226321,
        434.56498671,  530.25175929,  130.4133029 ,  419.45234144,
        672.64291787,  191.29327238,  414.59852195,  481.9161334 ,
        298.82793748,  346.41701293,  349.4830302 ,  198.80588698]), 'std_fit_time': array([5.55873156e-01, 1.25949322e+01, 1.18509005e+01, 5.63778877e-01,
       1.97988106e+01, 1.15216459e+01, 4.56002116e-01, 6.19802260e+00,
       1.43727449e+01, 1.91408539e+00, 8.78880239e+00, 1.07127246e+01,
       4.95915651e-01, 1.87779403e+00, 2.00407290e+01, 7.54012108e-01,
       3.47909915e+00, 3.35290369e+01, 1.68943071e+00, 4.46009767e+00,
       3.47017050e-01, 7.16080904e-01, 8.30557525e+00, 1.37858804e+01,
       1.81891441e-01, 2.88574804e+01, 4.14715078e+01, 2.96054125e-01,
       2.52580383e+01, 2.20427506e+02, 7.23965049e-01, 4.83918177e+01,
       2.27249498e+02, 1.31700706e+00, 9.69232333e+00, 1.84936696e+01,
       1.79989815e-01, 4.38265287e+01, 1.30081427e+00, 1.55013680e-01,
       2.12045817e+01, 1.42723530e+02, 3.05532217e-02, 2.57727054e+01,
       2.80751382e+02, 1.28632426e-01, 8.64883661e-02, 1.12422581e+02,
       1.17345265e+01, 2.11312754e+01, 7.48784292e+00, 9.49230552e-01,
       3.49202440e+01, 1.00674220e+01, 8.82471657e+00, 1.10235991e+01,
       3.79518856e+01, 2.20938098e+00, 3.41796213e+01, 7.92933439e+01,
       4.48657155e+00, 7.50720739e-01, 2.64401938e+01, 7.31591368e+00,
       1.52356898e+02, 2.85030440e+01, 1.69591855e+01, 1.46792337e+01,
       7.08350548e+01, 2.41678027e+01, 2.64323455e+01, 2.57393434e+01,
       9.03224659e+00, 1.83925343e+00, 1.82288021e+01, 1.52187285e+01,
       1.59386531e+02, 7.77394427e+01, 1.18312531e+01, 1.79658682e+02,
       4.74617562e+01, 1.20530285e+01, 1.80617465e+01, 1.58572154e+02,
       4.69729722e+00, 1.67510730e+02, 4.54830127e+01, 4.42625701e+00,
       1.64177894e+02, 9.74387826e+01, 7.78466785e+00, 7.01124203e+01,
       4.81908350e+01, 1.91943731e+01, 1.22745849e+01, 1.27939472e+02,
       1.12626498e+01, 2.42676995e+01, 2.72258633e+01, 1.13647377e+01,
       1.96617519e+02, 1.48157957e+01, 1.13301969e+00, 2.02645436e+02,
       8.93802872e+01, 4.41874397e+00, 1.18886370e+02, 2.71707121e+01,
       3.28008544e+00, 1.53911947e+02, 1.07855413e+01, 3.72677624e+00,
       1.77603487e+02, 4.00316205e+01, 1.37883899e+01, 1.18938129e+02,
       9.15361440e+01, 8.55230451e-01, 1.89317945e+01, 5.97404120e+01,
       2.18764067e-01, 2.10336191e+02, 7.91954594e+01, 2.15222716e-01,
       2.36345566e+02, 1.96234248e+01, 1.51252046e+01, 1.37892275e+02,
       1.02896439e+02, 8.09140086e-01, 1.30000640e+02, 1.08286902e+02,
       5.67796707e-01, 1.48292588e+02, 7.69015837e+00, 6.76834691e+00,
       2.12922852e+01, 4.81919187e+01, 4.58477116e+00, 1.10405044e+02,
       8.55096341e+01, 1.40087271e+00, 3.14842731e+01, 2.65894892e+01]), 'mean_score_time': array([1.90027976, 2.1289165 , 2.15803003, 1.94927645, 2.02793694,
       2.10746455, 2.06860876, 1.95077181, 2.14447999, 2.0905267 ,
       2.08517778, 1.95798111, 2.17575252, 1.90273905, 1.88639247,
       1.95925176, 2.05142045, 1.85107017, 1.99208987, 1.87963414,
       2.09419858, 2.12149024, 2.06037152, 1.95708823, 1.87879157,
       1.99442112, 2.21731877, 2.13745689, 1.94620049, 1.98508036,
       1.99632287, 1.92799973, 1.96868372, 2.15182817, 2.02803445,
       1.91858816, 2.06381714, 1.86454034, 1.98717153, 1.93152487,
       2.00001705, 2.08803165, 1.96826673, 1.96378696, 1.77960742,
       1.97054732, 1.82095122, 1.66350567, 2.02152622, 2.19641054,
       2.44066656, 2.3387264 , 2.41593063, 2.22824728, 2.3079499 ,
       2.42655194, 2.48921597, 2.47477186, 2.20580482, 2.3800801 ,
       2.52580428, 2.32025075, 2.22080517, 2.4619323 , 2.39325583,
       2.61360085, 2.71986091, 2.05649495, 2.65525782, 2.55516112,
       2.14987326, 2.26578343, 2.60594642, 2.04142523, 2.39426339,
       2.23529601, 2.15134919, 2.08745599, 2.32147396, 2.28268766,
       2.55002916, 2.82480145, 2.29260242, 2.340693  , 2.25222981,
       2.31544578, 2.33465481, 2.13631177, 2.37043798, 2.31998444,
       2.66336119, 2.21124327, 2.50272107, 2.76063359, 2.59558153,
       2.45054626, 0.63557768, 0.58655798, 0.43323004, 0.68945801,
       0.60999703, 0.55385804, 0.64482832, 0.79565167, 0.5051626 ,
       0.69390273, 0.5964601 , 0.7971009 , 0.70299399, 0.72367573,
       0.50503004, 0.82538366, 0.66206765, 0.4802922 , 0.61072755,
       0.72108185, 0.56890655, 0.74530196, 0.635584  , 0.69840813,
       0.67162335, 0.66587496, 0.56507754, 0.70913184, 0.64487422,
       0.50328839, 0.69354141, 0.65523005, 0.59327352, 0.83146071,
       0.69707632, 0.70408285, 0.95355797, 0.63796771, 0.53748202,
       0.73849261, 0.52240157, 0.51243007, 0.72271001, 0.42845535,
       0.49211657, 0.3884393 , 0.08918083, 0.19185603]), 'std_score_time': array([0.19085813, 0.12982988, 0.03058338, 0.04040337, 0.09222341,
       0.05551004, 0.08182597, 0.05494809, 0.04564714, 0.04471147,
       0.08873737, 0.14321136, 0.03270757, 0.01616168, 0.08875453,
       0.02131569, 0.03144598, 0.07437944, 0.07443964, 0.26091552,
       0.01979506, 0.11033463, 0.03601205, 0.16120887, 0.06124115,
       0.06524837, 0.14123964, 0.0936358 , 0.06710756, 0.04264796,
       0.01145864, 0.10911393, 0.09526825, 0.03831327, 0.08922434,
       0.03337193, 0.01670134, 0.00368071, 0.0065695 , 0.04097641,
       0.03218544, 0.0836271 , 0.00056934, 0.01978958, 0.09302294,
       0.02701747, 0.00282955, 0.05842173, 0.01709807, 0.15712392,
       0.01002848, 0.06479704, 0.37316668, 0.00645554, 0.06175554,
       0.0965575 , 0.43045914, 0.06088603, 0.07119393, 0.20074308,
       0.26970744, 0.13068962, 0.24220753, 0.25847733, 0.18703377,
       0.10447896, 0.37024796, 0.00794482, 0.14790022, 0.24540031,
       0.16779876, 0.11419475, 0.06216276, 0.05199361, 0.07493269,
       0.1016748 , 0.20879495, 0.06681347, 0.04043949, 0.19965219,
       0.17812574, 0.10591626, 0.14334619, 0.18766046, 0.10525382,
       0.11800086, 0.2268393 , 0.01309061, 0.12706506, 0.23202753,
       0.25435197, 0.05560577, 0.14541912, 0.13673961, 0.22475672,
       0.04538512, 0.066221  , 0.02690923, 0.02194369, 0.0200702 ,
       0.0493803 , 0.01148868, 0.02366972, 0.0040338 , 0.01037252,
       0.01009536, 0.08054829, 0.09886515, 0.02338946, 0.02645016,
       0.04675877, 0.07345891, 0.07437873, 0.0057689 , 0.04192019,
       0.03267777, 0.02837276, 0.05222487, 0.0641824 , 0.01451898,
       0.02885377, 0.04584527, 0.06105304, 0.05521142, 0.13524115,
       0.00737655, 0.10256374, 0.03377867, 0.05688488, 0.05363798,
       0.02694678, 0.02114475, 0.11453962, 0.00844061, 0.0519824 ,
       0.0202719 , 0.05306196, 0.02152455, 0.02477658, 0.19113231,
       0.0427047 , 0.01722848, 0.03045666, 0.02700126]), 'param_activation': masked_array(data=['logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03,
                   0.03, 0.03, 0.03, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,
                   0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.003, 0.003,
                   0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003,
                   0.003, 0.003, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.03, 0.03,
                   0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03,
                   0.03, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,
                   0.01, 0.01, 0.01, 0.01, 0.003, 0.003, 0.003, 0.003,
                   0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003,
                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
                   0.001, 0.001, 0.001, 0.001, 0.03, 0.03, 0.03, 0.03,
                   0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.01,
                   0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,
                   0.01, 0.01, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003,
                   0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.001, 0.001,
                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
                   0.001, 0.001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_hidden_layer_sizes': masked_array(data=[(30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30)],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate_init': masked_array(data=[0.03, 0.03, 0.03, 0.01, 0.01, 0.01, 0.003, 0.003,
                   0.003, 0.001, 0.001, 0.001, 0.03, 0.03, 0.03, 0.01,
                   0.01, 0.01, 0.003, 0.003, 0.003, 0.001, 0.001, 0.001,
                   0.03, 0.03, 0.03, 0.01, 0.01, 0.01, 0.003, 0.003,
                   0.003, 0.001, 0.001, 0.001, 0.03, 0.03, 0.03, 0.01,
                   0.01, 0.01, 0.003, 0.003, 0.003, 0.001, 0.001, 0.001,
                   0.03, 0.03, 0.03, 0.01, 0.01, 0.01, 0.003, 0.003,
                   0.003, 0.001, 0.001, 0.001, 0.03, 0.03, 0.03, 0.01,
                   0.01, 0.01, 0.003, 0.003, 0.003, 0.001, 0.001, 0.001,
                   0.03, 0.03, 0.03, 0.01, 0.01, 0.01, 0.003, 0.003,
                   0.003, 0.001, 0.001, 0.001, 0.03, 0.03, 0.03, 0.01,
                   0.01, 0.01, 0.003, 0.003, 0.003, 0.001, 0.001, 0.001,
                   0.03, 0.03, 0.03, 0.01, 0.01, 0.01, 0.003, 0.003,
                   0.003, 0.001, 0.001, 0.001, 0.03, 0.03, 0.03, 0.01,
                   0.01, 0.01, 0.003, 0.003, 0.003, 0.001, 0.001, 0.001,
                   0.03, 0.03, 0.03, 0.01, 0.01, 0.01, 0.003, 0.003,
                   0.003, 0.001, 0.001, 0.001, 0.03, 0.03, 0.03, 0.01,
                   0.01, 0.01, 0.003, 0.003, 0.003, 0.001, 0.001, 0.001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}], 'split0_test_score': array([-6.54085408e-04, -6.52139677e-04, -7.13340376e-04, -6.54342490e-04,
       -6.55614126e-04, -3.82160906e-04, -6.53762032e-04, -6.63691976e-04,
       -1.11015794e-03, -6.58499323e-04, -6.49163599e-04, -3.60254798e-04,
       -6.56120622e-04, -6.52477811e-04, -6.73158597e-04, -6.55519770e-04,
       -6.53518359e-04, -6.69222706e-04, -6.47519219e-04, -6.54323256e-04,
       -8.79737400e-05, -6.58074171e-04, -6.56060803e-04, -6.32621155e-04,
       -6.57353410e-04, -6.56401324e-04, -2.18562483e-03, -6.56358947e-04,
       -6.55601374e-04, -3.75485650e-02, -6.55853607e-04, -6.55079368e-04,
       -9.31048801e-04, -6.56506322e-04, -6.50546832e-04, -4.70390256e-02,
       -6.53306349e-04, -6.48302126e-04, -1.38161624e-03, -6.55821620e-04,
       -6.53487715e-04, -1.78532878e-02, -6.54348089e-04, -6.59831921e-04,
       -6.08866735e-02, -6.54820422e-04, -6.52364278e-04, -5.77182061e-02,
       -7.01895703e-02, -6.98987076e-02,  1.42790847e-02, -5.30042060e-02,
       -7.40466131e-02,  1.10864411e-02, -6.66163710e-02, -4.19531245e-02,
       -9.95428329e-02, -5.06602095e-02,  6.60054022e-03, -6.69840416e-02,
       -5.80247937e-02, -6.54013347e-02,  6.47334624e-03, -6.19492265e-02,
       -1.04587605e-01, -1.35275886e-03, -6.40834025e-02, -7.86191659e-02,
       -3.12276989e-02, -4.74418099e-02,  4.76465549e-03, -6.75003991e-02,
       -4.99325681e-02, -9.25088887e-02,  3.66538326e-03, -3.85102969e-02,
       -6.96250833e-02, -2.14194480e-04, -4.41672918e-02, -6.70405437e-02,
       -3.12946082e-02, -6.49219340e-02,  7.18485734e-03, -5.85384814e-02,
       -3.69605187e-02, -8.39196160e-02,  8.16207949e-03, -5.27011664e-02,
       -8.04396633e-02, -1.18764857e-02, -1.05993125e-01, -4.88262931e-02,
        3.98088848e-03, -5.93635700e-02, -6.45412761e-04, -5.52561224e-02,
       -7.72372089e-02,  1.22819878e-02,  4.14299023e-03, -1.01699154e-01,
       -5.51518004e-02, -5.30408241e-02, -5.15997100e-02, -6.55442972e-02,
       -5.45785301e-02, -1.13752814e-01, -1.28523252e-02, -3.43301123e-02,
       -2.46643160e-02, -6.57892724e-02, -3.94705563e-03, -4.22293058e-02,
       -4.50131354e-02, -3.08423595e-02, -6.51380146e-02, -6.44256444e-02,
       -5.58602792e-02, -7.51719705e-02, -5.34399359e-03, -4.06381294e-02,
       -5.31879207e-02, -6.54698687e-02, -1.44990118e-03, -6.85811462e-02,
       -4.00277695e-02,  3.94654504e-03, -2.49954111e-02, -6.96346437e-02,
       -3.46065602e-02, -1.03624235e-01, -7.46190166e-03, -4.82240094e-02,
       -4.88452848e-02, -5.32931565e-02,  9.11151158e-03, -8.41366542e-02,
       -5.60533358e-02, -2.74450786e-02, -4.65451204e-02, -4.60641304e-02,
       -2.29366920e-02, -9.49649235e-02,  1.01964020e-02, -3.71647727e-02]), 'split1_test_score': array([-2.50228933e-03, -2.51519969e-03, -4.36733903e-03, -2.51361383e-03,
       -2.47149199e-03, -2.94382373e-03, -2.51472851e-03, -2.54372322e-03,
       -1.87992278e-02, -2.51472571e-03, -2.53821730e-03, -1.79654744e-02,
       -2.50384064e-03, -2.50417197e-03, -1.44452868e-03, -2.51883506e-03,
       -2.46699099e-03, -1.38697062e-01, -2.51303756e-03, -2.50123094e-03,
       -4.02432665e-03, -2.51492954e-03, -2.52614401e-03, -5.21826632e-05,
       -2.50763255e-03, -2.46055158e-03, -6.39993327e-03, -2.51987553e-03,
       -2.53056220e-03, -1.67142040e-04, -2.51433368e-03, -2.45714384e-03,
       -4.58150239e-02, -2.52100455e-03, -2.57698688e-03, -6.86696879e-01,
       -2.52357050e-03, -2.44354528e-03, -7.75132885e-04, -2.50994121e-03,
       -2.51746994e-03, -8.53271644e-01, -2.50948992e-03, -2.53288513e-03,
        1.99527117e-03, -2.51118066e-03, -2.45078009e-03, -1.22115942e-01,
       -1.22432850e+00, -1.04701537e-01,  1.56954380e-02, -1.80760565e+00,
       -5.19711816e-01, -1.70232246e-02, -4.41824512e+00, -5.12331351e-01,
       -5.67321071e-02, -9.83204540e-01, -4.45791140e-01, -2.91224632e-01,
       -1.80594150e-01, -3.40302654e-01,  1.35404069e-02, -6.74815046e-01,
       -5.37492148e-01, -9.31172263e-02, -2.43688462e+00, -5.98860973e-01,
        1.12521704e-03, -6.11538090e+00, -5.13796378e-01, -2.98074000e-01,
       -5.96159495e+00, -1.12164962e+00, -6.30704958e-02, -9.37730240e+00,
       -3.80498450e-01, -1.96491905e-01, -2.07469425e-01, -1.82236493e-01,
       -2.31705747e-01, -7.25833049e-02, -3.94076488e-01, -1.69094809e-01,
       -3.50699252e+00, -3.48803904e-01,  9.93723803e-03, -4.27173827e+00,
       -1.13448520e-01, -1.84122989e-01, -3.66997421e+00, -4.61434521e-01,
       -4.52192644e-01, -2.64548411e+00, -2.65740024e-01, -6.38557133e-01,
       -8.77303535e-02, -2.56544243e-03, -4.48508052e-02, -1.18262045e-01,
       -1.08579398e-01, -1.93964873e-02, -4.05211074e-01, -1.48072572e-03,
       -3.72803315e-02, -4.08409256e-01, -1.44421459e-01, -9.53626772e-01,
       -2.67576480e-01, -1.14389583e-02,  1.45403475e-02, -2.38933210e-01,
       -1.18102128e-01, -2.82627941e-03, -1.17799082e-01, -2.56977553e-01,
       -2.40735680e-01, -3.43448336e-01, -3.87666672e-01, -6.22179139e-02,
       -3.98574309e-01,  2.78732463e-02, -1.34074061e-03, -1.19222414e+00,
       -1.79813947e-01, -2.69262571e-02, -9.49437289e-02, -3.17272998e-01,
       -3.75103098e-02, -1.52135117e+00, -1.75556448e-01, -3.01909310e-01,
       -5.70646623e-02,  1.29640994e-02, -1.13229559e-04, -2.76708016e+00,
       -9.57662958e-01,  4.58138774e-03, -3.36363229e-01,  6.88509394e-03,
       -3.57483930e-01, -4.39606428e-01, -1.77410778e-01, -1.72840145e-01]), 'mean_test_score': array([-1.57818737e-03, -1.58366969e-03, -2.54033970e-03, -1.58397816e-03,
       -1.56355306e-03, -1.66299232e-03, -1.58424527e-03, -1.60370760e-03,
       -9.95469286e-03, -1.58661252e-03, -1.59369045e-03, -9.16286457e-03,
       -1.57998063e-03, -1.57832489e-03, -1.05884364e-03, -1.58717741e-03,
       -1.56025467e-03, -6.96831422e-02, -1.58027839e-03, -1.57777710e-03,
       -2.05615020e-03, -1.58650186e-03, -1.59110241e-03, -3.42401909e-04,
       -1.58249298e-03, -1.55847645e-03, -4.29277905e-03, -1.58811724e-03,
       -1.59308179e-03, -1.88578535e-02, -1.58509364e-03, -1.55611160e-03,
       -2.33730364e-02, -1.58875544e-03, -1.61376686e-03, -3.66867952e-01,
       -1.58843842e-03, -1.54592370e-03, -1.07837456e-03, -1.58288141e-03,
       -1.58547883e-03, -4.35562466e-01, -1.58191901e-03, -1.59635852e-03,
       -2.94457012e-02, -1.58300054e-03, -1.55157218e-03, -8.99170742e-02,
       -6.47259034e-01, -8.73001222e-02,  1.49872613e-02, -9.30304930e-01,
       -2.96879215e-01, -2.96839175e-03, -2.24243075e+00, -2.77142238e-01,
       -7.81374700e-02, -5.16932375e-01, -2.19595300e-01, -1.79104337e-01,
       -1.19309472e-01, -2.02851994e-01,  1.00068766e-02, -3.68382137e-01,
       -3.21039876e-01, -4.72349926e-02, -1.25048401e+00, -3.38740069e-01,
       -1.50512409e-02, -3.08141135e+00, -2.54515861e-01, -1.82787200e-01,
       -3.00576376e+00, -6.07079256e-01, -2.97025563e-02, -4.70790635e+00,
       -2.25061767e-01, -9.83530499e-02, -1.25818359e-01, -1.24638519e-01,
       -1.31500178e-01, -6.87526195e-02, -1.93445815e-01, -1.13816645e-01,
       -1.77197652e+00, -2.16361760e-01,  9.04965876e-03, -2.16221972e+00,
       -9.69440916e-02, -9.79997372e-02, -1.88798367e+00, -2.55130407e-01,
       -2.24105878e-01, -1.35242384e+00, -1.33192718e-01, -3.46906628e-01,
       -8.24837812e-02,  4.85827267e-03, -2.03539075e-02, -1.09980599e-01,
       -8.18655994e-02, -3.62186557e-02, -2.28405392e-01, -3.35125115e-02,
       -4.59294308e-02, -2.61081035e-01, -7.86368918e-02, -4.93978442e-01,
       -1.46120398e-01, -3.86141154e-02,  5.29664595e-03, -1.40581258e-01,
       -8.15576319e-02, -1.68343194e-02, -9.14685481e-02, -1.60701599e-01,
       -1.48297980e-01, -2.09310153e-01, -1.96505333e-01, -5.14280216e-02,
       -2.25881115e-01, -1.87983112e-02, -1.39532089e-03, -6.30402641e-01,
       -1.09920859e-01, -1.14898560e-02, -5.99695700e-02, -1.93453821e-01,
       -3.60584350e-02, -8.12487701e-01, -9.15091749e-02, -1.75066660e-01,
       -5.29549736e-02, -2.01645285e-02,  4.49914101e-03, -1.42560841e+00,
       -5.06858147e-01, -1.14318454e-02, -1.91454174e-01, -1.95895182e-02,
       -1.90210311e-01, -2.67285676e-01, -8.36071882e-02, -1.05002459e-01]), 'std_test_score': array([9.24101960e-04, 9.31530009e-04, 1.82699933e-03, 9.29635671e-04,
       9.07938932e-04, 1.28083141e-03, 9.30483238e-04, 9.40015622e-04,
       8.84453493e-03, 9.28113194e-04, 9.44526849e-04, 8.80260978e-03,
       9.23860007e-04, 9.25847079e-04, 3.85685044e-04, 9.31657643e-04,
       9.06736314e-04, 6.90139195e-02, 9.32759169e-04, 9.23453843e-04,
       1.96817646e-03, 9.28427687e-04, 9.35041603e-04, 2.90219246e-04,
       9.25139570e-04, 9.02075129e-04, 2.10715422e-03, 9.31758294e-04,
       9.37480415e-04, 1.86907115e-02, 9.29240035e-04, 9.01032237e-04,
       2.24419876e-02, 9.32249114e-04, 9.63220026e-04, 3.19828927e-01,
       9.35132074e-04, 8.97621579e-04, 3.03241678e-04, 9.27059793e-04,
       9.31991114e-04, 4.17709178e-01, 9.27570918e-04, 9.36526604e-04,
       3.14409723e-02, 9.28180121e-04, 8.99207907e-04, 3.21988682e-02,
       5.77069464e-01, 1.74014146e-02, 7.08176668e-04, 8.77300724e-01,
       2.22832602e-01, 1.40548328e-02, 2.17581438e+00, 2.35189113e-01,
       2.14053629e-02, 4.66272165e-01, 2.26195840e-01, 1.12120295e-01,
       6.12846782e-02, 1.37450660e-01, 3.53353035e-03, 3.06432910e-01,
       2.16452272e-01, 4.58822337e-02, 1.18640061e+00, 2.60120904e-01,
       1.61764580e-02, 3.03396954e+00, 2.59280517e-01, 1.15286800e-01,
       2.95583119e+00, 5.14570368e-01, 3.33679395e-02, 4.66939605e+00,
       1.55436684e-01, 9.81388555e-02, 8.16510668e-02, 5.75979749e-02,
       1.00205569e-01, 3.83068547e-03, 2.00630673e-01, 5.52781637e-02,
       1.73501600e+00, 1.32442144e-01, 8.87579270e-04, 2.10951855e+00,
       1.65044283e-02, 8.61232515e-02, 1.78199054e+00, 2.06304114e-01,
       2.28086766e-01, 1.29306027e+00, 1.32547306e-01, 2.91650506e-01,
       5.24657229e-03, 7.42371510e-03, 2.44968977e-02, 8.28144550e-03,
       2.67137990e-02, 1.68221684e-02, 1.76805682e-01, 3.20317857e-02,
       8.64909929e-03, 1.47328221e-01, 6.57845667e-02, 4.59648330e-01,
       1.21456082e-01, 2.71751571e-02, 9.24370157e-03, 9.83519521e-02,
       3.65444965e-02, 1.40080400e-02, 2.63305335e-02, 9.62759543e-02,
       9.24377004e-02, 1.34138183e-01, 1.91161339e-01, 1.07898923e-02,
       1.72693194e-01, 4.66715575e-02, 5.45802821e-05, 5.61821494e-01,
       6.98930890e-02, 1.54364011e-02, 3.49741589e-02, 1.23819177e-01,
       1.45187483e-03, 7.08863465e-01, 8.40472733e-02, 1.26842650e-01,
       4.10968875e-03, 3.31286279e-02, 4.61237057e-03, 1.34147176e+00,
       4.50804811e-01, 1.60132332e-02, 1.44909054e-01, 2.64746122e-02,
       1.67273619e-01, 1.72320752e-01, 9.38035902e-02, 6.78376860e-02]), 'rank_test_score': array([ 18,  26,  45,  27,  16,  43,  28,  41,  49,  32,  39,  48,  20,
        19,   8,  33,  15,  72,  21,  17,  44,  31,  37,   7,  23,  14,
        47,  34,  38,  55,  29,  13,  59,  36,  42, 124,  35,  11,   9,
        24,  30, 126,  22,  40,  60,  25,  12,  80, 132,  79,   1, 134,
       120,  46, 141, 119,  73, 129, 110, 100,  90, 107,   2, 125, 121,
        67, 135, 122,  52, 143, 115, 101, 142, 130,  61, 144, 112,  85,
        92,  91,  93,  71, 104,  89, 138, 109,   3, 140,  83,  84, 139,
       116, 111, 136,  94, 123,  77,   5,  58,  88,  76,  64, 114,  62,
        66, 117,  74, 127,  96,  65,   4,  95,  75,  53,  81,  98,  97,
       108, 106,  68, 113,  54,  10, 131,  87,  51,  70, 105,  63, 133,
        82,  99,  69,  57,   6, 137, 128,  50, 103,  56, 102, 118,  78,
        86], dtype=int32), 'split0_train_score': array([ 6.28245255e-06,  5.66331052e-07, -4.75135453e-06,  1.08432721e-08,
        8.30277911e-06, -1.40359395e-04,  1.75098615e-06, -2.59926800e-07,
       -2.28960556e-04,  2.56818756e-07,  1.74749671e-06, -1.67994534e-04,
       -6.41499462e-06, -1.62264855e-06, -4.68688366e-07, -5.80037995e-06,
        1.06411014e-05, -2.87063866e-07,  1.27175821e-05,  1.35218542e-06,
       -4.69566470e-03, -1.25153210e-05,  1.03833935e-06, -7.56417514e-07,
       -6.69336322e-06, -7.51027794e-06, -1.71786191e-03, -1.16333391e-06,
       -6.15833834e-06,  6.40756372e-01,  6.23633621e-07,  8.53747472e-07,
       -9.28138334e-05, -6.01637147e-07,  2.38906482e-06,  3.80690368e-01,
        3.55359019e-06,  1.04720128e-05, -5.14226642e-04,  3.12821384e-07,
        5.22103491e-06,  6.64522282e-01, -3.78835061e-06, -2.45367953e-06,
        7.81211271e-01,  3.98394014e-06,  5.37970509e-07,  4.54841990e-01,
        8.27984143e-01,  9.02116670e-01,  3.65765000e-02,  8.53932252e-01,
        8.62416958e-01,  5.57942641e-02,  8.47438773e-01,  6.66942735e-01,
        8.95584033e-04,  8.52337095e-01,  1.64148741e-01,  8.86227327e-01,
        8.18445630e-01,  9.47725729e-01,  1.93548020e-02,  8.59852453e-01,
        8.99233541e-01,  8.53373664e-02,  8.80875061e-01,  6.80262050e-01,
        5.27988028e-01,  8.13215624e-01,  1.85568633e-01,  9.55703394e-01,
        8.27288975e-01,  9.64840277e-01,  7.83950328e-02,  8.42976963e-01,
        8.98186747e-01,  2.32780677e-01,  8.34993249e-01,  7.26389388e-01,
        3.95442091e-01,  8.50623618e-01,  1.47810848e-01,  9.61567609e-01,
        8.13706659e-01,  9.21139760e-01,  6.97430198e-02,  8.61714989e-01,
        8.97568176e-01,  1.16956659e-01,  8.65490696e-01,  7.15945325e-01,
        7.17570269e-01,  8.77722462e-01,  2.35604374e-01,  8.74709704e-01,
        7.82108552e-01,  8.73677192e-02,  8.36762038e-02,  8.24299277e-01,
        9.60736743e-01,  2.76602119e-01,  8.19155062e-01,  8.18987679e-01,
        7.77828645e-01,  7.99525605e-01,  3.16832676e-01,  8.22919963e-01,
        7.84480526e-01,  9.78469268e-01,  1.44975931e-01,  8.50846277e-01,
        9.52260503e-01,  5.25114769e-01,  7.69399754e-01,  8.68544755e-01,
        7.39462397e-01,  8.09597305e-01,  3.29705765e-01,  9.64742396e-01,
        7.88576503e-01,  9.28801867e-01, -5.98022872e-04,  6.97571199e-01,
        9.55540694e-01,  2.39533651e-01,  6.46297787e-01,  8.74829288e-01,
        6.44903706e-01,  8.70361838e-01,  3.52462916e-01,  9.61095676e-01,
        7.82860520e-01,  7.30526477e-01,  7.47538179e-02,  8.02723361e-01,
        9.32521179e-01,  4.64636474e-01,  8.58397549e-01,  8.73072928e-01,
        8.38297770e-01,  8.65493085e-01,  2.63273711e-01,  9.59884728e-01]), 'split1_train_score': array([ 3.86942597e-06,  9.27919500e-08, -6.61725966e-05,  3.95578415e-07,
        3.05523509e-06, -4.39809417e-06,  3.21336088e-07, -2.06693239e-06,
       -1.97010362e-03,  1.48564334e-07, -4.77382707e-07, -1.83324408e-03,
        2.37889430e-06, -6.99721783e-07, -3.84021105e-05, -1.55701990e-06,
       -1.11799919e-06,  4.39497056e-02,  1.49427480e-06,  1.13820426e-06,
       -4.60113309e-05,  6.22422932e-08,  1.33997539e-06, -8.57488954e-04,
        8.46878922e-07, -4.25981882e-07, -4.41268405e-03, -2.03863726e-06,
        2.72119471e-06, -3.60893069e-04, -1.97915693e-06, -1.24008546e-07,
        6.18431402e-01, -7.14676638e-07,  2.46352627e-07,  5.18100672e-01,
       -1.53268137e-06, -2.15656479e-08, -1.58983704e-03,  1.34409204e-06,
        2.57062175e-07,  2.66011996e-01,  1.62952847e-06,  1.05877275e-06,
        4.92788379e-01, -6.95668368e-07,  1.21091742e-06,  5.25407424e-01,
        8.61526954e-01,  2.00586938e-01,  1.52075264e-02,  7.85057679e-01,
        4.89439389e-01,  2.05465515e-02,  7.84369348e-01,  6.96431559e-01,
        1.58495039e-01,  8.44997865e-01,  5.18747788e-01,  6.68988464e-01,
        8.50256264e-01,  6.59324282e-01,  1.61662518e-02,  8.55711011e-01,
        4.35520290e-01,  2.75695663e-02,  8.22896183e-01,  8.95621876e-01,
        7.04203294e-02,  7.76068463e-01,  6.47941631e-01,  7.69758198e-01,
        7.98896804e-01,  6.65398937e-01,  1.07258785e-02,  8.11008574e-01,
        4.59178622e-01,  8.25611754e-02,  7.95238711e-01,  4.76495655e-01,
        2.72005621e-01,  7.24001660e-01,  5.49596697e-01,  6.41349392e-01,
        7.93727125e-01,  3.80112804e-01,  3.40594301e-03,  7.53872730e-01,
        2.01026160e-01,  1.49615611e-01,  8.06566337e-01,  5.61653126e-01,
       -5.48493567e-02,  7.95156532e-01,  5.99171388e-01,  7.91202708e-01,
        6.98575126e-01, -6.56518200e-08,  4.70300516e-02,  7.76718023e-01,
        2.11216985e-01,  2.54411819e-03,  7.52124751e-01,  1.72577796e-01,
        2.64710396e-01,  8.09988819e-01,  5.78775370e-01,  8.76605199e-01,
        7.73358144e-01,  2.40667784e-01,  5.99223465e-03,  7.96588738e-01,
        1.74188807e-01, -6.34568025e-08,  6.44275917e-01,  5.27496515e-01,
        4.81881394e-01,  8.03877192e-01,  6.90890254e-01,  4.21270800e-01,
        7.17021695e-01,  2.83538555e-02, -1.96115373e-03,  8.49578876e-01,
        1.57987191e-01,  5.35260830e-02,  7.09576642e-01,  5.47009468e-01,
        5.15586650e-01,  8.15250047e-01,  5.34041719e-01,  6.08859359e-01,
        7.52855978e-01,  2.24898282e-02, -4.06614642e-04,  7.96306027e-01,
        7.80404219e-01,  2.64109096e-02,  7.37019865e-01,  4.35508647e-02,
        4.71163914e-01,  7.09311559e-01,  4.90418043e-01,  6.69538947e-01]), 'mean_train_score': array([ 5.07593926e-06,  3.29561501e-07, -3.54619755e-05,  2.03210844e-07,
        5.67900710e-06, -7.23787446e-05,  1.03616112e-06, -1.16342960e-06,
       -1.09953209e-03,  2.02691545e-07,  6.35056999e-07, -1.00061930e-03,
       -2.01805016e-06, -1.16118517e-06, -1.94353994e-05, -3.67869992e-06,
        4.76155110e-06,  2.19747093e-02,  7.10592843e-06,  1.24519484e-06,
       -2.37083802e-03, -6.22653935e-06,  1.18915737e-06, -4.29122686e-04,
       -2.92324215e-06, -3.96812991e-06, -3.06527298e-03, -1.60098558e-06,
       -1.71857182e-06,  3.20197739e-01, -6.77761653e-07,  3.64869463e-07,
        3.09169294e-01, -6.58156892e-07,  1.31770872e-06,  4.49395520e-01,
        1.01045441e-06,  5.22522356e-06, -1.05203184e-03,  8.28456713e-07,
        2.73904854e-06,  4.65267139e-01, -1.07941107e-06, -6.97453394e-07,
        6.36999825e-01,  1.64413588e-06,  8.74443964e-07,  4.90124707e-01,
        8.44755549e-01,  5.51351804e-01,  2.58920132e-02,  8.19494966e-01,
        6.75928173e-01,  3.81704078e-02,  8.15904060e-01,  6.81687147e-01,
        7.96953114e-02,  8.48667480e-01,  3.41448265e-01,  7.77607895e-01,
        8.34350947e-01,  8.03525005e-01,  1.77605269e-02,  8.57781732e-01,
        6.67376915e-01,  5.64534664e-02,  8.51885622e-01,  7.87941963e-01,
        2.99204179e-01,  7.94642044e-01,  4.16755132e-01,  8.62730796e-01,
        8.13092890e-01,  8.15119607e-01,  4.45604556e-02,  8.26992769e-01,
        6.78682685e-01,  1.57670926e-01,  8.15115980e-01,  6.01442521e-01,
        3.33723856e-01,  7.87312639e-01,  3.48703772e-01,  8.01458500e-01,
        8.03716892e-01,  6.50626282e-01,  3.65744814e-02,  8.07793859e-01,
        5.49297168e-01,  1.33286135e-01,  8.36028516e-01,  6.38799225e-01,
        3.31360456e-01,  8.36439497e-01,  4.17387881e-01,  8.32956206e-01,
        7.40341839e-01,  4.36838268e-02,  6.53531277e-02,  8.00508650e-01,
        5.85976864e-01,  1.39573119e-01,  7.85639907e-01,  4.95782738e-01,
        5.21269521e-01,  8.04757212e-01,  4.47804023e-01,  8.49762581e-01,
        7.78919335e-01,  6.09568526e-01,  7.54840828e-02,  8.23717508e-01,
        5.63224655e-01,  2.62557353e-01,  7.06837836e-01,  6.98020635e-01,
        6.10671896e-01,  8.06737248e-01,  5.10298009e-01,  6.93006598e-01,
        7.52799099e-01,  4.78577861e-01, -1.27958830e-03,  7.73575037e-01,
        5.56763942e-01,  1.46529867e-01,  6.77937215e-01,  7.10919378e-01,
        5.80245178e-01,  8.42805942e-01,  4.43252317e-01,  7.84977517e-01,
        7.67858249e-01,  3.76508153e-01,  3.71736016e-02,  7.99514694e-01,
        8.56462699e-01,  2.45523692e-01,  7.97708707e-01,  4.58311896e-01,
        6.54730842e-01,  7.87402322e-01,  3.76845877e-01,  8.14711838e-01]), 'std_train_score': array([1.20651329e-06, 2.36769551e-07, 3.07106210e-05, 1.92367572e-07,
       2.62377201e-06, 6.79806505e-05, 7.14825032e-07, 9.03502797e-07,
       8.70571534e-04, 5.41272112e-08, 1.11243971e-06, 8.32624771e-04,
       4.39694446e-06, 4.61463385e-07, 1.89667111e-05, 2.12168003e-06,
       5.87955029e-06, 2.19749963e-02, 5.61165363e-06, 1.06990583e-07,
       2.32482669e-03, 6.28878165e-06, 1.50818019e-07, 4.28366268e-04,
       3.77012107e-06, 3.54214803e-06, 1.34741107e-03, 4.37651673e-07,
       4.43976652e-06, 3.20558632e-01, 1.30139527e-06, 4.88878009e-07,
       3.09262108e-01, 5.65197457e-08, 1.07135609e-06, 6.87051519e-02,
       2.54313578e-06, 5.24678921e-06, 5.37805200e-04, 5.15635329e-07,
       2.48198637e-06, 1.99255143e-01, 2.70893954e-06, 1.75622614e-06,
       1.44211446e-01, 2.33980425e-06, 3.36473455e-07, 3.52827167e-02,
       1.67714055e-02, 3.50764866e-01, 1.06844868e-02, 3.44372865e-02,
       1.86488785e-01, 1.76238563e-02, 3.15347122e-02, 1.47444117e-02,
       7.87997273e-02, 3.66961512e-03, 1.77299524e-01, 1.08619432e-01,
       1.59053169e-02, 1.44200724e-01, 1.59427511e-03, 2.07072097e-03,
       2.31856625e-01, 2.88839001e-02, 2.89894389e-02, 1.07679913e-01,
       2.28783849e-01, 1.85735804e-02, 2.31186499e-01, 9.29725980e-02,
       1.41960859e-02, 1.49720670e-01, 3.38345771e-02, 1.59841946e-02,
       2.19504063e-01, 7.51097507e-02, 1.98772687e-02, 1.24946867e-01,
       6.17182350e-02, 6.33109789e-02, 2.00892924e-01, 1.60109108e-01,
       9.98976733e-03, 2.70513478e-01, 3.31685384e-02, 5.39211297e-02,
       3.48271008e-01, 1.63294759e-02, 2.94621795e-02, 7.71460998e-02,
       3.86209813e-01, 4.12829651e-02, 1.81783507e-01, 4.17534982e-02,
       4.17667131e-02, 4.36838924e-02, 1.83230761e-02, 2.37906271e-02,
       3.74759879e-01, 1.37029000e-01, 3.35151556e-02, 3.23204942e-01,
       2.56559125e-01, 5.23160675e-03, 1.30971347e-01, 2.68426178e-02,
       5.56119092e-03, 3.68900742e-01, 6.94918482e-02, 2.71287697e-02,
       3.89035848e-01, 2.62557416e-01, 6.25619184e-02, 1.70524120e-01,
       1.28790501e-01, 2.86005693e-03, 1.80592244e-01, 2.71735798e-01,
       3.57774040e-02, 4.50224006e-01, 6.81565431e-04, 7.60038383e-02,
       3.98776752e-01, 9.30037837e-02, 3.16394278e-02, 1.63909910e-01,
       6.46585280e-02, 2.75558956e-02, 9.07894016e-02, 1.76118158e-01,
       1.50022709e-02, 3.54018324e-01, 3.75802163e-02, 3.20866709e-03,
       7.60584800e-02, 2.19112782e-01, 6.06888417e-02, 4.14761032e-01,
       1.83566928e-01, 7.80907631e-02, 1.13572166e-01, 1.45172890e-01])} 
  
 Best Estimator: 
 MLPRegressor(activation='tanh', alpha=0.03, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(30, 90, 180, 90, 30), learning_rate='adaptive',
       learning_rate_init=0.03, max_iter=200, momentum=0.9,
       n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='adam', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False) 
 with 0.014987261347528756
{'hidden_layer_sizes': [(30, 90, 180, 90, 30)], 'activation': ['logistic', 'tanh', 'relu'], 'solver': ['lbfgs', 'sgd', 'adam'], 'alpha': [0.03, 0.01, 0.003, 0.001], 'learning_rate_init': [0.03, 0.01, 0.003, 0.001], 'learning_rate': ['adaptive']} 
 
 {'mean_fit_time': array([  10.92134559,  648.49730325,  139.3314302 ,   11.99571192,
        426.90578735,  182.60694289,   12.90372872,  339.24885249,
        150.42525256,   13.56926632,  307.89680314,  256.37461233,
         13.48816001,  423.02154398,  136.36842465,   12.84507489,
        382.06127799,  143.88248742,   13.87061024,  299.72588253,
        189.64662313,   13.96303022,  308.27953279,  143.65351748,
         13.39088571,  452.15033913,  136.99841702,   13.50154245,
        393.33321083,  341.42335308,   12.2004751 ,  325.40135634,
        119.12660336,   13.33984506,  304.95462728,  977.70447385,
         12.19692814,  445.27568412,  162.23845303,   13.42836404,
        381.75057912,  347.50986052,   12.89795363,  312.70941401,
        727.64403725,   13.49021673,  305.18093812,  951.5724833 ,
        726.53140557,  905.92992198,  212.3577956 ,  716.67573965,
        778.88173532,  119.81385076,  712.78535736,  987.45439565,
        317.99346101,  718.11490977,  994.69628894,  664.06645501,
        726.83232093, 1012.18930948,  149.57900107,  723.84822774,
        973.81030011,  219.19081354,  713.98461711,  964.26971877,
        281.60417604,  705.27276063,  947.51059699,  808.61133718,
        738.97334313, 1003.97708428,  113.67836893,  728.50512981,
       1036.63184392,  223.15853786,  708.64034915, 1004.29236293,
        306.48244274,  713.88291812,  990.08410847,  488.68643606,
        726.32141173, 1040.32652926,  147.32655895,  730.44146943,
        969.96304941,  356.52841365,  727.08785987,  910.67358303,
        310.11847913,  740.57720959,  964.61070836,  734.53632259,
        384.79491913,  566.29096484,  141.04105747,  413.12081599,
        661.41187418,  115.44480968,  424.00900412,  560.41033614,
        198.9788264 ,  430.60127032,  781.78563535,  333.29689157,
        407.40441716,  771.72076976,   83.99418092,  411.70721972,
        669.21587586,  130.91369545,  420.43076098,  645.95426977,
        197.74401605,  424.88484049,  730.35128307,  278.68477988,
        405.92075753,  604.24049854,  101.91903961,  401.54094231,
        616.01762867,  104.02506864,  414.22848094,  756.64039278,
        314.85494089,  415.92666554,  749.76899326,  347.94280005,
        418.12103999,  734.62296963,  137.35881257,  408.5528841 ,
        603.01640975,  125.74134481,  412.09916174,  471.08895981,
        180.19012642,  340.95995307,  300.75249958,  194.55961883]), 'std_fit_time': array([2.05294287e+00, 1.46687319e+01, 6.51756406e+00, 5.09218574e-01,
       2.71507684e+01, 5.76048691e+01, 7.20885754e-01, 3.16296911e+01,
       6.45701087e+00, 1.06732798e+00, 7.68247604e-01, 7.69414663e+00,
       4.43437219e-01, 2.41739397e+01, 2.06525779e+00, 7.17127562e-01,
       2.69292980e+01, 3.41195170e+01, 1.44335747e-01, 1.10513997e+00,
       2.10903180e+01, 3.30556512e-01, 8.03142369e+00, 1.64136791e+00,
       1.05255485e-01, 3.91183710e+00, 2.17671448e+01, 4.93744493e-01,
       1.58040453e+01, 2.60594604e+02, 1.76903784e+00, 2.77192811e+01,
       3.49119945e+01, 1.52269959e-01, 6.18969250e+00, 3.41968979e+01,
       2.03934276e+00, 4.43548834e+01, 3.65901569e+01, 2.96348095e-01,
       1.69730117e+01, 2.31434165e+02, 1.51690245e-02, 1.22995417e+01,
       2.20228517e+02, 3.50847244e-02, 3.64164114e-02, 1.58430791e+00,
       8.87422681e-01, 1.69665228e+02, 2.64817778e+01, 4.22400582e+00,
       1.99952026e+02, 3.55801213e+00, 5.20874584e+00, 8.00053704e+00,
       4.67356678e+01, 1.18972887e+01, 2.05486444e+01, 4.26284329e+01,
       1.16741464e+01, 2.43341678e+01, 1.61038309e+01, 3.61706233e+00,
       6.01024914e+00, 1.15713644e+01, 1.01397008e+01, 2.41999732e+01,
       1.29207856e+02, 1.07028017e+01, 1.81965923e+00, 4.70609267e+01,
       1.53777332e+01, 4.53762294e+01, 1.65713192e+01, 7.59168363e+00,
       2.77755891e+01, 6.43905513e+01, 1.87738097e+01, 4.76611259e+01,
       1.19212708e+02, 5.41910315e+00, 3.99897254e+00, 1.22534963e+02,
       8.02619755e+00, 6.84771543e+01, 2.36625421e+00, 3.86404538e+00,
       1.96856260e+00, 4.00685656e+00, 7.28738308e-02, 3.57242675e+01,
       2.33753947e+01, 1.42221950e+01, 7.24868637e+01, 9.58404264e+01,
       7.80648029e+00, 1.97183197e+02, 7.76168469e+01, 1.12100306e+01,
       1.43828506e+02, 2.18546367e+00, 4.90605593e-01, 1.51669907e+02,
       5.82504863e+01, 3.19752276e+00, 6.69237959e+00, 1.93385407e+02,
       6.53238499e+00, 3.58111032e+01, 1.09413147e+00, 7.13723385e+00,
       1.17906911e+02, 1.65166918e+01, 1.13746921e+01, 1.78220481e+02,
       5.50103880e+01, 3.54437160e+00, 5.18405466e+01, 5.42434826e+01,
       1.58819344e+01, 2.06724691e+02, 1.51257765e+00, 7.05629218e+00,
       1.60404981e+02, 7.43375385e+00, 8.72577417e+00, 1.52628539e+01,
       7.85070131e+01, 4.83091593e+00, 3.12662137e+00, 1.03758092e+02,
       1.19710163e+01, 4.92280791e+01, 1.15219898e+01, 3.30567622e+00,
       7.77357260e+01, 6.54059136e+00, 1.29751133e+01, 9.36741265e+01,
       8.20057800e+01, 2.10997610e+01, 5.22891970e+01, 3.02041794e+01]), 'mean_score_time': array([2.05967152, 2.12159228, 2.1161592 , 1.78942859, 2.06442785,
       2.14836895, 1.99248672, 1.99002957, 2.03899348, 2.01006734,
       1.97667563, 1.95484626, 2.05573082, 2.08913076, 2.28129339,
       2.00778079, 2.00360084, 2.20305455, 2.34123075, 1.79239917,
       2.24064028, 2.13747644, 2.11616611, 1.93118012, 2.0937506 ,
       2.2651062 , 1.98293293, 2.15012681, 2.14888799, 2.06063962,
       2.0951854 , 2.0158608 , 1.96211219, 2.1116575 , 1.94079149,
       2.02059293, 2.14518189, 1.98260975, 2.03649914, 2.07894456,
       1.9712857 , 1.92218864, 2.04323459, 2.00063157, 1.99372733,
       2.03682768, 1.87228274, 1.67035389, 2.24991667, 2.37507522,
       2.26988471, 2.42315495, 1.92085922, 2.62869728, 2.49480927,
       2.10814571, 2.04512584, 2.42076695, 2.43808091, 2.48746264,
       2.58310556, 2.23986995, 2.30921233, 1.95017481, 2.45740247,
       2.27068424, 2.52074957, 2.31733358, 2.64048207, 2.38970721,
       2.01496947, 2.27761638, 2.18824553, 2.536713  , 2.44618082,
       2.50688481, 2.64344752, 2.46982384, 2.26937521, 2.21042001,
       2.41690266, 2.0956403 , 2.02107513, 2.80112541, 2.42425489,
       2.24998045, 2.35777783, 2.17651951, 2.03649557, 2.2376796 ,
       2.88714063, 2.26125908, 2.43959725, 2.31305981, 2.26344419,
       1.96391916, 0.83342636, 0.75335252, 0.5491401 , 0.79050839,
       0.80014741, 0.46579611, 0.72876251, 0.75021422, 0.58303642,
       0.76135731, 0.7827456 , 0.73008931, 0.82010424, 0.65870595,
       0.64475143, 0.76581538, 0.67180669, 0.51666844, 0.70285952,
       0.76283181, 0.52569997, 0.56319737, 0.68261838, 0.72728264,
       0.74435258, 0.76536405, 0.44444823, 0.82262111, 0.67657042,
       0.56159115, 0.6872654 , 0.69647706, 0.54414773, 0.7317301 ,
       0.69427609, 0.76147485, 0.71403325, 0.55280447, 0.4554497 ,
       0.9152633 , 0.50100052, 0.56651568, 0.71206152, 0.33680367,
       0.63747537, 0.43395483, 0.09608591, 0.30717885]), 'std_score_time': array([0.06894624, 0.12770867, 0.06079173, 0.04109967, 0.07815337,
       0.04529536, 0.02668047, 0.05948973, 0.01188552, 0.10582054,
       0.09943688, 0.09650767, 0.12683535, 0.16979301, 0.31495023,
       0.06392646, 0.07677269, 0.05943692, 0.09295881, 0.21211028,
       0.14854872, 0.10949588, 0.00762033, 0.04852545, 0.06513655,
       0.02963352, 0.02252638, 0.01154745, 0.05083883, 0.05369902,
       0.01615107, 0.14130974, 0.01992226, 0.02281988, 0.04056036,
       0.00896668, 0.03799987, 0.02283263, 0.1228894 , 0.15929878,
       0.08417952, 0.01285088, 0.07142305, 0.04708433, 0.1032995 ,
       0.05012071, 0.00260782, 0.15896988, 0.00153244, 0.57200944,
       0.23370135, 0.03310239, 0.01422369, 0.10364091, 0.41649783,
       0.01197934, 0.06498253, 0.20828974, 0.12722981, 0.13644421,
       0.00247765, 0.04300869, 0.08526433, 0.27926493, 0.27297211,
       0.02722216, 0.03722334, 0.18401968, 0.07813799, 0.1450609 ,
       0.10358703, 0.06170452, 0.30895925, 0.09335625, 0.28490472,
       0.16551375, 0.19450581, 0.26294637, 0.32610524, 0.06753862,
       0.16818249, 0.19191229, 0.31540954, 0.16541994, 0.04789996,
       0.04847527, 0.1559124 , 0.0414201 , 0.00360096, 0.14694297,
       0.26305783, 0.06686711, 0.18296182, 0.23907709, 0.00701928,
       0.01466346, 0.1178242 , 0.10833752, 0.06893528, 0.00548279,
       0.08618629, 0.00737774, 0.04133499, 0.01216853, 0.04036903,
       0.01088333, 0.08154249, 0.10745871, 0.00452483, 0.10386753,
       0.14166486, 0.03781521, 0.02139151, 0.03360784, 0.00280869,
       0.07422554, 0.00726664, 0.22827983, 0.04140711, 0.14396489,
       0.07458329, 0.04689252, 0.0288868 , 0.14722657, 0.08666468,
       0.05810285, 0.02991056, 0.03260314, 0.01816773, 0.01594937,
       0.06519914, 0.02084374, 0.02344525, 0.07557058, 0.00246441,
       0.12083805, 0.2003516 , 0.04528975, 0.04501188, 0.17306256,
       0.01983368, 0.1517936 , 0.03794944, 0.08468854]), 'param_activation': masked_array(data=['logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03,
                   0.03, 0.03, 0.03, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,
                   0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.003, 0.003,
                   0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003,
                   0.003, 0.003, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.03, 0.03,
                   0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03,
                   0.03, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,
                   0.01, 0.01, 0.01, 0.01, 0.003, 0.003, 0.003, 0.003,
                   0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003,
                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
                   0.001, 0.001, 0.001, 0.001, 0.03, 0.03, 0.03, 0.03,
                   0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.01,
                   0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,
                   0.01, 0.01, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003,
                   0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.001, 0.001,
                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
                   0.001, 0.001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_hidden_layer_sizes': masked_array(data=[(30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30)],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate_init': masked_array(data=[0.03, 0.03, 0.03, 0.01, 0.01, 0.01, 0.003, 0.003,
                   0.003, 0.001, 0.001, 0.001, 0.03, 0.03, 0.03, 0.01,
                   0.01, 0.01, 0.003, 0.003, 0.003, 0.001, 0.001, 0.001,
                   0.03, 0.03, 0.03, 0.01, 0.01, 0.01, 0.003, 0.003,
                   0.003, 0.001, 0.001, 0.001, 0.03, 0.03, 0.03, 0.01,
                   0.01, 0.01, 0.003, 0.003, 0.003, 0.001, 0.001, 0.001,
                   0.03, 0.03, 0.03, 0.01, 0.01, 0.01, 0.003, 0.003,
                   0.003, 0.001, 0.001, 0.001, 0.03, 0.03, 0.03, 0.01,
                   0.01, 0.01, 0.003, 0.003, 0.003, 0.001, 0.001, 0.001,
                   0.03, 0.03, 0.03, 0.01, 0.01, 0.01, 0.003, 0.003,
                   0.003, 0.001, 0.001, 0.001, 0.03, 0.03, 0.03, 0.01,
                   0.01, 0.01, 0.003, 0.003, 0.003, 0.001, 0.001, 0.001,
                   0.03, 0.03, 0.03, 0.01, 0.01, 0.01, 0.003, 0.003,
                   0.003, 0.001, 0.001, 0.001, 0.03, 0.03, 0.03, 0.01,
                   0.01, 0.01, 0.003, 0.003, 0.003, 0.001, 0.001, 0.001,
                   0.03, 0.03, 0.03, 0.01, 0.01, 0.01, 0.003, 0.003,
                   0.003, 0.001, 0.001, 0.001, 0.03, 0.03, 0.03, 0.01,
                   0.01, 0.01, 0.003, 0.003, 0.003, 0.001, 0.001, 0.001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'sgd'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}], 'split0_test_score': array([-6.53573705e-04, -6.44980251e-04, -2.35474939e-04, -6.54061304e-04,
       -6.68459478e-04, -5.08014588e-04, -6.54507386e-04, -6.59251885e-04,
       -2.12664773e-03, -6.54302049e-04, -6.63409550e-04, -3.46486313e-04,
       -6.56294869e-04, -6.58852788e-04, -1.07176092e-04, -6.53200654e-04,
       -6.57274602e-04, -2.55546834e-03, -6.58494273e-04, -6.52339647e-04,
       -3.01784622e-04, -6.55176890e-04, -6.55016444e-04, -3.44905803e-03,
       -6.57050191e-04, -6.46400105e-04, -1.00391415e-03, -6.52304500e-04,
       -6.50948395e-04, -4.51851318e-02, -6.55477298e-04, -6.61448411e-04,
       -2.06923542e-04, -6.55817455e-04, -6.51068978e-04, -3.49772815e-02,
       -6.52765845e-04, -6.56829066e-04, -6.61037892e-05, -6.54259777e-04,
       -6.60879445e-04, -5.31676632e-02, -6.56517663e-04, -6.42828516e-04,
       -4.39001435e-02, -6.54148358e-04, -6.53675162e-04, -8.39593650e-02,
       -4.22777572e-02, -4.16902321e-02,  8.29513261e-03, -5.53450525e-02,
       -8.70524151e-02,  5.77710061e-03, -9.40635054e-02, -5.58987229e-02,
       -5.67528137e-02, -9.13149923e-02,  1.51937122e-02, -7.06205024e-02,
       -5.14361669e-02, -9.66128798e-02, -8.72492420e-03, -4.21269987e-02,
       -5.81899305e-02,  4.50693523e-03, -6.74120802e-02, -6.78948865e-02,
       -3.87206579e-02, -5.01693492e-02,  1.29764062e-02, -7.18741114e-02,
       -4.35563220e-02, -7.52668764e-02,  6.29342596e-03, -7.41416019e-02,
       -1.08069957e-01, -6.09939642e-03, -6.32297468e-02, -5.04047637e-02,
       -2.51591184e-02, -6.14437014e-02,  9.93535701e-03, -8.32071683e-02,
       -5.30407701e-02, -8.35253305e-02,  5.32995274e-03, -5.64589893e-02,
       -9.37823292e-02, -1.87989594e-02, -5.46319896e-02, -4.86273073e-02,
       -3.47433812e-02, -6.34994031e-02,  6.24795509e-03, -8.65325868e-02,
       -4.66748439e-02, -5.53480536e-02,  2.72974803e-03, -2.87943863e-02,
       -6.67434604e-02,  4.39168905e-03, -5.55266537e-02, -7.36656527e-02,
       -4.56843555e-02, -9.57920912e-02,  1.31618922e-03, -4.43070041e-02,
       -8.09340386e-02, -6.51561205e-02,  1.67395975e-02, -9.87395761e-02,
       -5.54429675e-02,  6.28255049e-03, -6.95115255e-02, -6.22766489e-02,
       -1.04170258e-02, -6.18235172e-02, -4.33808045e-03, -5.01153890e-02,
       -7.08364013e-02, -4.59945676e-02, -5.33006959e-03, -8.59568714e-02,
       -5.62348197e-02, -4.20224602e-03, -5.52080020e-02, -8.58924823e-02,
       -7.75906212e-02, -5.77451381e-02, -8.93879181e-03, -3.29620586e-02,
       -4.22693918e-02, -7.62029589e-02,  1.51047214e-02, -4.90306432e-02,
       -4.97307651e-02, -1.11037222e-03, -9.00052829e-02, -4.15928820e-02,
       -3.56151853e-02, -6.94737622e-02, -6.56078418e-03, -3.91660253e-02]), 'split1_test_score': array([-2.51561081e-03, -2.47962370e-03, -7.85610362e-04, -2.51499900e-03,
       -2.52197814e-03, -2.43600368e-03, -2.51050027e-03, -2.52570427e-03,
       -9.16247163e-03, -2.51605896e-03, -2.48503002e-03, -1.34671017e-03,
       -2.51715748e-03, -2.44618692e-03, -9.86948241e-05, -2.51320733e-03,
       -2.50166646e-03, -7.90065353e-05, -2.51998696e-03, -2.54544874e-03,
       -9.90522037e-04, -2.51945520e-03, -2.52086682e-03, -9.49318111e-03,
       -2.52139208e-03, -2.50890815e-03, -9.73771594e-04, -2.51006414e-03,
       -2.58536970e-03, -3.96078917e-04, -2.50703018e-03, -2.51680289e-03,
       -8.83224101e-03, -2.52027230e-03, -2.58435975e-03, -4.45760232e-01,
       -2.50966059e-03, -2.52567540e-03, -2.06547002e-03, -2.51800874e-03,
       -2.44769087e-03, -3.14398184e-03, -2.50902383e-03, -2.55431625e-03,
       -1.32380087e+00, -2.50731686e-03, -2.50993928e-03, -3.70461100e-01,
       -3.54569238e-01,  5.62360742e-03, -1.40772154e-01, -1.91091013e+00,
       -1.00272468e-01,  2.14290766e-02, -4.59895862e+00, -3.45044358e-01,
       -2.65848181e-01, -6.89395717e+00, -4.00190038e-01, -1.97598365e-01,
       -2.39832823e+00, -6.71283384e-01, -4.40297375e-02, -3.20792324e+00,
       -1.37435238e-01, -7.66301385e-02, -1.04706969e+00, -1.93998697e-01,
       -1.48566316e-01, -6.11115585e-01, -3.67912758e-01, -3.27327366e-01,
       -3.85569383e+00, -6.58376763e-01,  6.62945954e-03, -3.67366700e+00,
       -4.40633334e-01, -2.43356817e-02, -6.00260919e+00, -1.87586972e-01,
       -6.58793867e-03, -4.46979094e+00, -4.77369199e-01, -3.15333738e-01,
       -1.88426316e+00, -5.41402842e-01, -5.87479296e-02, -1.35666926e+00,
       -1.79879385e+00, -2.08962789e-01, -2.50872435e+00, -4.25879148e-01,
       -9.53882833e-02, -4.68628718e+00, -2.86507046e-01, -3.45632869e-01,
       -1.49856313e+00,  2.46784257e-02, -4.21545007e-03, -3.68748363e-01,
       -2.16640365e-01, -2.82605309e-03, -2.19161991e-01,  4.61318708e-03,
       -1.46254088e-02, -5.25401785e-01, -3.01963041e-01, -2.31731956e-01,
       -7.75738841e-01, -1.94377907e-02,  4.32142619e-03, -1.86515282e+00,
       -1.61246371e-01,  3.53125465e-03, -5.54096735e-01, -2.28404343e-01,
       -2.28959501e-01, -3.31263184e-01, -3.32135103e-01, -4.47344442e-01,
       -6.74364636e-02, -2.50918816e-03, -1.24169484e-02, -3.52815089e-01,
       -1.20687887e-01, -2.91414305e-03, -4.56503500e-01, -1.86383655e-01,
       -6.50859964e-01, -6.14517600e-01, -3.74395967e-01, -3.82885669e-01,
       -3.40144656e-01, -2.88411382e-01, -1.74258504e-03, -1.10961090e+00,
       -3.61102965e-01, -2.99571217e-03, -7.68554232e-02, -3.54352726e-02,
       -9.78912926e-02, -3.55815652e-01, -1.34098717e-01, -2.98324549e-01]), 'mean_test_score': array([-1.58459226e-03, -1.56230197e-03, -5.10542651e-04, -1.58453015e-03,
       -1.59521881e-03, -1.47200914e-03, -1.58250383e-03, -1.59247808e-03,
       -5.64455968e-03, -1.58518050e-03, -1.57421978e-03, -8.46598242e-04,
       -1.58672617e-03, -1.55251986e-03, -1.02935458e-04, -1.58320399e-03,
       -1.57947053e-03, -1.31723744e-03, -1.58924062e-03, -1.59889419e-03,
       -6.46153329e-04, -1.58731604e-03, -1.58794163e-03, -6.47111957e-03,
       -1.58922114e-03, -1.57765413e-03, -9.88842870e-04, -1.58118432e-03,
       -1.61815905e-03, -2.27906054e-02, -1.58125374e-03, -1.58912565e-03,
       -4.51958227e-03, -1.58804488e-03, -1.61771436e-03, -2.40368757e-01,
       -1.58121322e-03, -1.59125224e-03, -1.06578691e-03, -1.58613426e-03,
       -1.55428516e-03, -2.81558225e-02, -1.58277075e-03, -1.59857238e-03,
       -6.83850507e-01, -1.58073261e-03, -1.58180722e-03, -2.27210232e-01,
       -1.98423498e-01, -1.80333124e-02, -6.62385105e-02, -9.83127590e-01,
       -9.36624416e-02,  1.36030886e-02, -2.34651106e+00, -2.00471540e-01,
       -1.61300497e-01, -3.49263608e+00, -1.92498163e-01, -1.34109434e-01,
       -1.22488220e+00, -3.83948132e-01, -2.63773308e-02, -1.62502512e+00,
       -9.78125840e-02, -3.60616016e-02, -5.57240887e-01, -1.30946792e-01,
       -9.36434870e-02, -3.30642467e-01, -1.77468176e-01, -1.99600739e-01,
       -1.94962508e+00, -3.66821820e-01,  6.46144275e-03, -1.87390430e+00,
       -2.74351645e-01, -1.52175390e-02, -3.03291947e+00, -1.18995868e-01,
       -1.58735285e-02, -2.26561732e+00, -2.33716921e-01, -1.99270453e-01,
       -9.68651964e-01, -3.12464086e-01, -2.67089884e-02, -7.06564126e-01,
       -9.46288090e-01, -1.13880874e-01, -1.28167817e+00, -2.37253228e-01,
       -6.50658322e-02, -2.37489329e+00, -1.40129546e-01, -2.16082728e-01,
       -7.72618987e-01, -1.53348139e-02, -7.42851018e-04, -1.98771375e-01,
       -1.41691913e-01,  7.82817980e-04, -1.37344322e-01, -3.45262328e-02,
       -3.01548821e-02, -3.10596938e-01, -1.50323426e-01, -1.38019480e-01,
       -4.28336440e-01, -4.22969556e-02,  1.05305118e-02, -9.81946200e-01,
       -1.08344669e-01,  4.90690257e-03, -3.11804130e-01, -1.45340496e-01,
       -1.19688263e-01, -1.96543350e-01, -1.68236592e-01, -2.48729915e-01,
       -6.91364324e-02, -2.42518779e-02, -8.87350898e-03, -2.19385980e-01,
       -8.84613531e-02, -3.55819454e-03, -2.55855751e-01, -1.36138069e-01,
       -3.64225293e-01, -3.36131369e-01, -1.91667379e-01, -2.07923864e-01,
       -1.91207024e-01, -1.82307171e-01,  6.68106816e-03, -5.79320773e-01,
       -2.05416865e-01, -2.05304220e-03, -8.34303531e-02, -3.85140773e-02,
       -6.67532390e-02, -2.12644707e-01, -7.03297505e-02, -1.68745287e-01]), 'std_test_score': array([9.31018553e-04, 9.17321723e-04, 2.75067711e-04, 9.30468851e-04,
       9.26759330e-04, 9.63994548e-04, 9.27996440e-04, 9.33226193e-04,
       3.51791195e-03, 9.30878455e-04, 9.10810233e-04, 5.00111929e-04,
       9.30431306e-04, 8.93667067e-04, 4.24063410e-06, 9.30003336e-04,
       9.22195929e-04, 1.23823090e-03, 9.30746343e-04, 9.46554548e-04,
       3.44368708e-04, 9.32139155e-04, 9.32925189e-04, 3.02206154e-03,
       9.32170947e-04, 9.31254023e-04, 1.50712763e-05, 9.28879818e-04,
       9.67210651e-04, 2.23945264e-02, 9.25776439e-04, 9.27677242e-04,
       4.31265873e-03, 9.32227421e-04, 9.66645387e-04, 2.05391475e-01,
       9.28447373e-04, 9.34423169e-04, 9.99683117e-04, 9.31874483e-04,
       8.93405712e-04, 2.50118407e-02, 9.26253086e-04, 9.55743868e-04,
       6.39950363e-01, 9.26584249e-04, 9.28132058e-04, 1.43250867e-01,
       1.56145741e-01, 2.36569198e-02, 7.45336431e-02, 9.27782538e-01,
       6.61002647e-03, 7.82598800e-03, 2.25244756e+00, 1.44572817e-01,
       1.04547684e-01, 3.40132109e+00, 2.07691875e-01, 6.34889312e-02,
       1.17344603e+00, 2.87335252e-01, 1.76524067e-02, 1.58289812e+00,
       3.96226535e-02, 4.05685368e-02, 4.89828807e-01, 6.30519054e-02,
       5.49228290e-02, 2.80473118e-01, 1.90444582e-01, 1.27726628e-01,
       1.90606876e+00, 2.91554943e-01, 1.68016791e-04, 1.79976270e+00,
       1.66281688e-01, 9.11814262e-03, 2.96968972e+00, 6.85911043e-02,
       9.28558984e-03, 2.20417362e+00, 2.43652278e-01, 1.16063285e-01,
       9.15611194e-01, 2.28938756e-01, 3.20389412e-02, 6.50105136e-01,
       8.52505760e-01, 9.50819149e-02, 1.22704618e+00, 1.88625921e-01,
       3.03224511e-02, 2.31139389e+00, 1.46377501e-01, 1.29550141e-01,
       7.25944143e-01, 4.00132397e-02, 3.47259905e-03, 1.69976989e-01,
       7.49484523e-02, 3.60887107e-03, 8.18176685e-02, 3.91394199e-02,
       1.55294734e-02, 2.14804847e-01, 1.51639615e-01, 9.37124758e-02,
       3.47402401e-01, 2.28591649e-02, 6.20908564e-03, 8.83206624e-01,
       5.29017019e-02, 1.37564792e-03, 2.42292605e-01, 8.30638471e-02,
       1.09271238e-01, 1.34719833e-01, 1.63898511e-01, 1.98614526e-01,
       1.69996888e-03, 2.17426897e-02, 3.54343939e-03, 1.33429109e-01,
       3.22265334e-02, 6.44051484e-04, 2.00647749e-01, 5.02455863e-02,
       2.86634672e-01, 2.78386231e-01, 1.82728587e-01, 1.74961805e-01,
       1.48937632e-01, 1.06104212e-01, 8.42365320e-03, 5.30290129e-01,
       1.55686100e-01, 9.42669975e-04, 6.57492981e-03, 3.07880468e-03,
       3.11380537e-02, 1.43170945e-01, 6.37689663e-02, 1.29579262e-01]), 'rank_test_score': array([ 31,  18,   8,  30,  43,  15,  27,  42,  51,  32,  19,  11,  34,
        16,   7,  29,  21,  14,  40,  45,   9,  35,  36,  52,  39,  20,
        12,  23,  47,  58,  25,  38,  50,  37,  46, 113,  24,  41,  13,
        33,  17,  62,  28,  44, 128,  22,  26, 110, 100,  57,  69, 134,
        76,   1, 141, 104,  91, 144,  98,  83, 135, 124,  60, 137,  77,
        65, 126,  82,  75, 120,  94, 103, 139, 123,   4, 138, 116,  54,
       143,  80,  56, 140, 111, 102, 132, 119,  61, 129, 131,  79, 136,
       112,  68, 142,  87, 108, 130,  55,  10, 101,  88,   6,  85,  64,
        63, 117,  90,  86, 125,  67,   2, 133,  78,   5, 118,  89,  81,
        99,  92, 114,  71,  59,  53, 109,  74,  49, 115,  84, 122, 121,
        97, 106,  96,  95,   3, 127, 105,  48,  73,  66,  70, 107,  72,
        93], dtype=int32), 'split0_train_score': array([ 4.61572671e-08,  1.10292747e-06, -6.43411677e-03,  4.66161517e-06,
       -7.58613150e-09, -3.58653061e-05,  6.93576230e-07,  6.67687494e-06,
       -1.61626825e-03,  4.14208866e-06, -1.04339813e-06, -1.87109894e-04,
        7.33412323e-07,  7.94914516e-07, -8.91923793e-04,  7.39656908e-06,
        2.77173027e-06, -2.39063084e-03, -8.00713837e-06,  2.34242227e-06,
       -2.59614406e-04, -1.27809434e-06, -5.73613153e-06, -4.21392832e-03,
       -4.27616280e-06,  1.76953232e-06, -3.32335231e-04,  3.99535620e-06,
        8.07589279e-07,  6.47556810e-01,  2.87471232e-06, -1.43923585e-06,
       -6.13570729e-03, -4.30817010e-06, -7.24011843e-07,  4.79720721e-01,
        4.64900702e-07,  9.01740427e-06, -4.36626410e-03,  1.30895671e-06,
       -4.61787879e-06,  7.23695023e-01, -5.13384071e-06,  5.89104893e-06,
        5.60559389e-01,  4.32355983e-06,  4.30789224e-06,  4.90001738e-01,
        8.78100649e-01,  8.85740943e-01,  3.51935655e-02,  8.52856381e-01,
        8.97021332e-01,  1.64502928e-02,  8.54248601e-01,  6.98882615e-01,
        5.27689489e-01,  8.35681907e-01,  1.32690490e-01,  8.80663900e-01,
        8.40750902e-01,  9.33770467e-01, -1.31077710e-02,  8.44849595e-01,
        8.87063565e-01,  1.60982234e-01,  8.68215172e-01,  7.26788931e-01,
        6.12006988e-01,  8.44494435e-01,  1.54134560e-01,  9.25599563e-01,
        8.62142609e-01,  9.62967653e-01,  2.63814343e-02,  8.74082681e-01,
        8.91947685e-01,  2.30644603e-01,  8.62286628e-01,  7.23846849e-01,
        5.78484909e-01,  8.42009192e-01,  1.63565085e-01,  9.27845473e-01,
        8.28893486e-01,  9.66050085e-01,  5.69063579e-02,  8.40801511e-01,
        8.90396694e-01,  4.35883288e-01,  8.38809289e-01,  6.75373804e-01,
        6.51535606e-01,  8.58574005e-01,  1.75914711e-01,  9.43471882e-01,
        8.48142239e-01,  8.84906069e-01,  3.17334649e-02,  8.21011001e-01,
        9.61488067e-01,  1.71540865e-01,  8.28110882e-01,  9.19737542e-01,
        7.00006936e-01,  8.57135051e-01,  3.11955356e-01,  9.17261287e-01,
        8.86683427e-01,  9.62237287e-01,  8.19192486e-02,  8.77316828e-01,
        9.61465944e-01,  1.65257371e-01,  8.12721021e-01,  8.60675978e-01,
        7.17324422e-01,  8.23337458e-01,  3.57984367e-01,  9.31364313e-01,
        7.76061411e-01,  9.75274934e-01, -3.76624018e-03,  7.69136592e-01,
        9.68482773e-01,  1.16681823e-02,  8.65508032e-01,  8.89803191e-01,
        6.71329509e-01,  8.51405065e-01,  3.73602253e-01,  9.69975131e-01,
        8.56779973e-01,  9.68976707e-01,  7.44071590e-02,  8.20077582e-01,
        9.17067708e-01,  5.37895479e-02,  7.46377278e-01,  8.46783309e-01,
        7.63532671e-01,  8.80009146e-01,  4.11532146e-01,  9.73399505e-01]), 'split1_train_score': array([-1.04787640e-06, -1.51319282e-07, -1.27461189e-04,  8.46415699e-07,
        3.19073644e-07, -1.63535438e-07,  6.33211134e-07, -3.30947212e-07,
       -5.41049651e-04, -6.03886236e-07,  1.27874208e-07, -4.71319395e-05,
       -9.43161252e-07,  4.36180059e-09, -9.40434350e-04,  2.25820378e-06,
       -3.86421874e-07, -4.43486067e-04, -8.20455895e-07,  7.35724135e-07,
       -9.08599804e-05, -8.58103412e-07, -6.15385432e-09, -5.82467859e-04,
       -2.79549339e-06,  4.90202932e-07, -9.34804355e-05,  1.42156425e-06,
       -1.58302840e-06, -1.27853315e-03, -1.77702785e-06,  8.09491909e-07,
       -5.00479502e-04, -3.30622647e-08,  2.71445325e-07,  5.05301073e-01,
        3.92081522e-07,  5.07080503e-07, -5.75655912e-06,  3.55870089e-07,
       -3.09431928e-07,  1.45614793e-04,  2.14416108e-06,  1.91492123e-06,
        7.21100517e-01,  1.96362201e-06, -7.61320895e-08,  5.31166857e-01,
        7.67167470e-01,  1.63993185e-01, -2.41366272e-02,  7.53180893e-01,
        3.81971227e-01,  2.74153142e-02,  7.82877560e-01,  8.81704451e-01,
        2.99980199e-01,  7.72266547e-01,  6.16512377e-01,  7.46413797e-01,
        8.11898641e-01,  5.71775780e-01,  8.16090778e-03,  7.70571090e-01,
        7.04694470e-01,  1.30567670e-02,  7.88773477e-01,  4.37947093e-01,
        1.48935038e-01,  8.39045586e-01,  5.72360663e-01,  5.00865862e-01,
        7.78969607e-01,  6.75247381e-01,  8.16660075e-03,  7.86884341e-01,
        6.06543459e-01,  4.03577760e-02,  7.61400533e-01,  6.62182497e-01,
        4.43885562e-02,  7.25828577e-01,  6.03038132e-01,  5.89020714e-01,
        8.77789139e-01,  9.09422275e-01, -1.13165581e-04,  8.30105429e-01,
        8.13584218e-01,  1.60550169e-01,  8.12722616e-01,  9.06743188e-01,
        6.74303449e-02,  8.12314530e-01,  5.97439971e-01,  7.49331764e-01,
        8.82427678e-01,  3.71597441e-02, -3.44906420e-03,  8.35291947e-01,
        5.33864034e-01,  3.97923791e-02,  7.57241268e-01,  1.43583076e-02,
        1.88130112e-01,  7.21515485e-01,  7.82038295e-01,  6.91541954e-01,
        7.58186389e-01,  3.96387932e-01,  1.83571394e-03,  7.30320632e-01,
        5.21626272e-01,  1.31879991e-02,  7.46947294e-01,  5.40445400e-01,
        3.67025171e-01,  7.63482461e-01,  6.07806885e-01,  8.40111265e-01,
        6.83645653e-01,  1.01223252e-10, -9.04938630e-04,  7.83808963e-01,
        5.27241722e-01, -3.83064822e-06,  7.65295725e-01,  7.77258701e-01,
        8.08001043e-01,  8.89350762e-01,  5.38773941e-01,  9.25558579e-01,
        7.28409340e-01,  5.76250328e-01, -1.80796589e-05,  7.29970976e-01,
        5.27224933e-01, -5.47634341e-06,  7.43920089e-01,  1.52566659e-01,
        1.29883892e-01,  6.26502876e-01,  3.44001253e-01,  9.06051178e-01]), 'mean_train_score': array([-5.00859569e-07,  4.75804092e-07, -3.28078898e-03,  2.75401544e-06,
        1.55743756e-07, -1.80144208e-05,  6.63393682e-07,  3.17296386e-06,
       -1.07865895e-03,  1.76910121e-06, -4.57761960e-07, -1.17120917e-04,
       -1.04874464e-07,  3.99638159e-07, -9.16179071e-04,  4.82738643e-06,
        1.19265420e-06, -1.41705846e-03, -4.41379713e-06,  1.53907320e-06,
       -1.75237193e-04, -1.06809888e-06, -2.87114269e-06, -2.39819809e-03,
       -3.53582810e-06,  1.12986763e-06, -2.12907833e-04,  2.70846023e-06,
       -3.87719558e-07,  3.23139138e-01,  5.48842232e-07, -3.14871970e-07,
       -3.31809339e-03, -2.17061618e-06, -2.26283259e-07,  4.92510897e-01,
        4.28491112e-07,  4.76224239e-06, -2.18601033e-03,  8.32413401e-07,
       -2.46365536e-06,  3.61920319e-01, -1.49483982e-06,  3.90298508e-06,
        6.40829953e-01,  3.14359092e-06,  2.11588008e-06,  5.10584298e-01,
        8.22634059e-01,  5.24867064e-01,  5.52846915e-03,  8.03018637e-01,
        6.39496279e-01,  2.19328035e-02,  8.18563080e-01,  7.90293533e-01,
        4.13834844e-01,  8.03974227e-01,  3.74601434e-01,  8.13538848e-01,
        8.26324771e-01,  7.52773123e-01, -2.47343159e-03,  8.07710342e-01,
        7.95879018e-01,  8.70195003e-02,  8.28494325e-01,  5.82368012e-01,
        3.80471013e-01,  8.41770010e-01,  3.63247611e-01,  7.13232712e-01,
        8.20556108e-01,  8.19107517e-01,  1.72740175e-02,  8.30483511e-01,
        7.49245572e-01,  1.35501189e-01,  8.11843581e-01,  6.93014673e-01,
        3.11436732e-01,  7.83918884e-01,  3.83301609e-01,  7.58433094e-01,
        8.53341312e-01,  9.37736180e-01,  2.83965961e-02,  8.35453470e-01,
        8.51990456e-01,  2.98216728e-01,  8.25765953e-01,  7.91058496e-01,
        3.59482975e-01,  8.35444267e-01,  3.86677341e-01,  8.46401823e-01,
        8.65284958e-01,  4.61032907e-01,  1.41422003e-02,  8.28151474e-01,
        7.47676051e-01,  1.05666622e-01,  7.92676075e-01,  4.67047925e-01,
        4.44068524e-01,  7.89325268e-01,  5.46996825e-01,  8.04401620e-01,
        8.22434908e-01,  6.79312610e-01,  4.18774813e-02,  8.03818730e-01,
        7.41546108e-01,  8.92226849e-02,  7.79834158e-01,  7.00560689e-01,
        5.42174797e-01,  7.93409960e-01,  4.82895626e-01,  8.85737789e-01,
        7.29853532e-01,  4.87637467e-01, -2.33558941e-03,  7.76472777e-01,
        7.47862247e-01,  5.83217580e-03,  8.15401879e-01,  8.33530946e-01,
        7.39665276e-01,  8.70377913e-01,  4.56188097e-01,  9.47766855e-01,
        7.92594656e-01,  7.72613517e-01,  3.71945397e-02,  7.75024279e-01,
        7.22146321e-01,  2.68920358e-02,  7.45148684e-01,  4.99674984e-01,
        4.46708282e-01,  7.53256011e-01,  3.77766699e-01,  9.39725341e-01]), 'std_train_score': array([5.47016836e-07, 6.27123374e-07, 3.15332779e-03, 1.90759974e-06,
       1.63329888e-07, 1.78508853e-05, 3.01825479e-08, 3.50391108e-06,
       5.37609298e-04, 2.37298745e-06, 5.85636168e-07, 6.99889774e-05,
       8.38286787e-07, 3.95276358e-07, 2.42552787e-05, 2.56918265e-06,
       1.57907607e-06, 9.73572388e-04, 3.59334124e-06, 8.03349068e-07,
       8.43772126e-05, 2.09995463e-07, 2.86498884e-06, 1.81573023e-03,
       7.40334703e-07, 6.39664694e-07, 1.19427398e-04, 1.28689598e-06,
       1.19530884e-06, 3.24417671e-01, 2.32587008e-06, 1.12436388e-06,
       2.81761389e-03, 2.13755392e-06, 4.97728584e-07, 1.27901758e-02,
       3.64095900e-08, 4.25516188e-06, 2.18025377e-03, 4.76543312e-07,
       2.15422343e-06, 3.61774704e-01, 3.63900090e-06, 1.98806385e-06,
       8.02705639e-02, 1.17996891e-06, 2.19201217e-06, 2.05825592e-02,
       5.54665894e-02, 3.60873879e-01, 2.96650964e-02, 4.98377440e-02,
       2.57525052e-01, 5.48251066e-03, 3.56855205e-02, 9.14109178e-02,
       1.13854645e-01, 3.17076798e-02, 2.41910944e-01, 6.71250519e-02,
       1.44261304e-02, 1.80997344e-01, 1.06343394e-02, 3.71392526e-02,
       9.11845476e-02, 7.39627333e-02, 3.97208474e-02, 1.44420919e-01,
       2.31535975e-01, 2.72442461e-03, 2.09113052e-01, 2.12366851e-01,
       4.15865007e-02, 1.43860136e-01, 9.10741679e-03, 4.35991703e-02,
       1.42702113e-01, 9.51434134e-02, 5.04430474e-02, 3.08321760e-02,
       2.67048176e-01, 5.80903077e-02, 2.19736523e-01, 1.69412380e-01,
       2.44478264e-02, 2.83139048e-02, 2.85097617e-02, 5.34804115e-03,
       3.84062377e-02, 1.37666559e-01, 1.30433365e-02, 1.15684692e-01,
       2.92052630e-01, 2.31297376e-02, 2.10762630e-01, 9.70700589e-02,
       1.71427192e-02, 4.23873163e-01, 1.75912645e-02, 7.14047309e-03,
       2.13812016e-01, 6.58742428e-02, 3.54348068e-02, 4.52689617e-01,
       2.55938412e-01, 6.78097832e-02, 2.35041469e-01, 1.12859667e-01,
       6.42485192e-02, 2.82924678e-01, 4.00417674e-02, 7.34980979e-02,
       2.19919836e-01, 7.60346858e-02, 3.28868635e-02, 1.60115289e-01,
       1.75149625e-01, 2.99274987e-02, 1.24911259e-01, 4.56265237e-02,
       4.62078788e-02, 4.87637467e-01, 1.43065078e-03, 7.33618565e-03,
       2.20620525e-01, 5.83600645e-03, 5.01061535e-02, 5.62722449e-02,
       6.83357668e-02, 1.89728481e-02, 8.25858438e-02, 2.22082760e-02,
       6.41853165e-02, 1.96363189e-01, 3.72126193e-02, 4.50533026e-02,
       1.94921388e-01, 2.68975121e-02, 1.22859441e-03, 3.47108325e-01,
       3.16824389e-01, 1.26753135e-01, 3.37654466e-02, 3.36741637e-02])} 
  
 Best Estimator: 
 MLPRegressor(activation='tanh', alpha=0.03, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(30, 90, 180, 90, 30), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='adam', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False) 
 with 0.01360308861344234
{'hidden_layer_sizes': [(100, 200, 500)], 'activation': ['logistic', 'tanh', 'relu'], 'solver': ['lbfgs', 'adam'], 'alpha': [0.03, 0.01, 0.003, 0.001], 'learning_rate_init': [0.03, 0.01, 0.003, 0.001], 'learning_rate': ['adaptive']} 
 
 {'mean_fit_time': array([ 930.87719607,  408.50032306,  940.43300247,  503.70117378,
        939.86718762,  274.52140212,  918.75297284,  997.78037536,
        952.41999292,  468.64779198,  986.01296806,  689.46922469,
        979.83947337,  668.1786598 ,  989.8085525 , 1698.18620467,
        983.63863766,  249.52547383,  998.58691621,  653.01585865,
       1001.17028713, 1288.35117483, 1026.99732757, 1691.70093346,
       1026.13810563,  426.19444788, 1018.82833707,  789.23489654,
       1013.34626138,  938.16416883, 1013.29933727, 1649.00052202,
       1080.74696815,  425.10283959, 1060.12871408,  294.15385592,
       1039.95509994,  677.66210067, 1067.367486  , 1122.57617319,
       1049.56189477,  397.40112662, 1039.40626931,  605.36576188,
       1036.79874122,  556.02558434, 1028.42064214,  912.46649635,
       1017.45792282,  196.19522846, 1013.62759876,  573.70104933,
       1026.88216221,  587.40896893, 1024.56716108,  992.57617223,
       1022.43748403,  158.21369314, 1028.07752597,  336.58511519,
       1046.18145728,  648.05966938, 1126.40962732,  929.75377059,
        676.13688195,  227.40163088,  702.32159019,  290.2839092 ,
        734.99753904,  295.04151142,  719.65177834,  318.30380154,
        740.26531255,  276.41112614,  756.19853437,  367.19985104,
        732.20507526,  392.50407445,  745.16786969,  384.61487031,
        762.03034508,  294.33693981,  741.61453331,  350.91649795,
        752.14683306,  339.95502806,  752.29276359,  470.54347229,
        741.94737089,  543.58127999,  726.55582905,  333.49921024,
        644.42323864,  417.24759793,  484.36969101,  340.4552232 ]), 'std_fit_time': array([5.05105352e+00, 1.81483613e+02, 1.41219370e+01, 2.86117965e+02,
       1.42340243e+00, 9.89763570e+01, 7.36155176e+00, 6.52402428e+02,
       8.49959970e+00, 2.68150585e+02, 6.82410169e+00, 1.56208520e+02,
       2.68992126e+00, 4.21538911e+02, 3.87476516e+00, 1.01313162e+00,
       3.75073314e-01, 7.23393202e+00, 1.43387153e+01, 1.83204751e+02,
       9.33617735e+00, 1.36288741e+02, 1.47799861e+01, 2.40786018e+01,
       2.65663242e+00, 7.10105978e+01, 1.24753622e+01, 8.47758898e+01,
       9.68469322e+00, 5.11212552e+01, 4.33282018e-01, 2.70190254e+01,
       8.58128083e+00, 1.01280326e+02, 3.55598664e+00, 7.66087822e+01,
       1.40865833e+01, 5.46890739e+01, 4.61229110e+00, 3.97986332e+02,
       1.14937294e+00, 2.32330982e+02, 6.84953213e-01, 6.58585025e+01,
       6.89225554e-01, 1.11626211e+01, 1.36734724e+00, 1.19240793e+02,
       1.47180808e+00, 9.18831280e+01, 4.73203349e+00, 3.22365873e+01,
       1.41644059e+01, 2.30560493e+00, 6.12834692e-01, 1.64755202e+02,
       1.96136808e+00, 2.82231128e+01, 4.62075341e+00, 1.92713374e+02,
       6.89273143e+00, 8.55795920e+00, 4.30173314e+00, 6.58301985e+01,
       5.10207045e+00, 5.72628806e+01, 1.93994045e-01, 1.13141704e+02,
       1.46391456e+01, 1.23272526e+02, 8.50550568e+00, 4.55854023e+01,
       5.50158846e+00, 6.13222768e+01, 1.29322528e+01, 1.09063222e+02,
       4.90948939e+00, 3.81702253e+01, 5.45727885e+00, 7.21952577e+01,
       1.70788199e+01, 6.03927412e+01, 1.75843977e+01, 7.32385576e+01,
       2.28432858e+00, 1.42616799e+02, 7.69263589e+00, 4.55509162e+00,
       9.22904837e+00, 2.49438005e+02, 8.39851618e-01, 3.12793857e+01,
       1.01430632e+01, 5.30146716e+01, 9.46037114e+00, 1.53657416e+01]), 'mean_score_time': array([2.53851128, 2.87246501, 2.70328367, 2.78214562, 2.82572484,
       2.56880164, 3.30370259, 3.34743333, 2.88677669, 2.54116309,
       2.18948555, 2.89943719, 3.29321718, 3.03374946, 2.7176404 ,
       3.13468158, 2.8250953 , 2.81869006, 3.58364594, 2.5834527 ,
       3.04893315, 3.04245925, 3.12801504, 2.53255618, 3.10079265,
       2.97237027, 3.04363406, 2.81610966, 3.19438136, 2.31204033,
       2.76423752, 2.50712121, 3.0519284 , 3.15217698, 2.98515475,
       3.34165418, 3.86879539, 3.12976766, 3.5969882 , 3.40611577,
       3.4414525 , 3.46766555, 3.35243106, 3.23510182, 3.18842936,
       3.34484231, 3.7041713 , 3.35291755, 3.34527957, 3.41045606,
       3.34308016, 3.01911438, 3.50752711, 3.26624143, 3.28112459,
       3.42810869, 3.64589834, 3.19537091, 3.51128602, 3.64599824,
       4.15098202, 3.54396093, 3.88603783, 4.01338387, 1.2792871 ,
       0.82291675, 1.24164283, 0.90751791, 1.29887903, 1.21922493,
       1.10409546, 1.08124566, 1.19575334, 1.01854467, 1.57325482,
       0.99958384, 1.27548838, 1.05429792, 1.26511669, 1.37963414,
       1.41270757, 0.89870048, 1.28857768, 1.05131865, 1.39121091,
       1.03281701, 1.14699984, 1.08018911, 1.50536895, 0.95543206,
       0.86511517, 0.86971617, 0.55501866, 0.80077684, 0.18031776,
       0.35043848]), 'std_score_time': array([0.01495624, 0.02324855, 0.10575163, 0.28371871, 0.38629866,
       0.14935517, 0.01674652, 0.45667815, 0.08976769, 0.44631946,
       0.84993482, 0.11090231, 0.05223799, 0.4097966 , 0.03188658,
       0.14456546, 0.26041877, 0.1455524 , 0.09294045, 0.19857621,
       0.02370536, 0.14742041, 0.17998695, 0.24971688, 0.03059888,
       0.00325596, 0.02532828, 0.07406759, 0.1560787 , 0.15278506,
       0.2473098 , 0.0813514 , 0.03306258, 0.31769216, 0.52696955,
       0.13853872, 0.47509003, 0.30406141, 0.26985502, 0.61663413,
       0.12305307, 0.14937747, 0.086972  , 0.01622832, 0.1038456 ,
       0.22120345, 0.29302299, 0.30072892, 0.12154305, 0.10332739,
       0.14049637, 0.05780399, 0.11869574, 0.03381908, 0.09598684,
       0.16309762, 0.25115347, 0.55472064, 0.26109266, 0.08621955,
       0.62598455, 0.71625245, 0.69247675, 0.0810473 , 0.09844971,
       0.02171588, 0.02278388, 0.06396484, 0.20038712, 0.17271066,
       0.08890939, 0.18635511, 0.06042862, 0.17500782, 0.0228374 ,
       0.10632479, 0.13106418, 0.13795257, 0.15118337, 0.02243996,
       0.34305692, 0.03841305, 0.01785457, 0.15835214, 0.09555709,
       0.29767573, 0.02183533, 0.07909143, 0.18179584, 0.19080651,
       0.14671254, 0.10225868, 0.02116895, 0.06584203, 0.06256735,
       0.08459365]), 'param_activation': masked_array(data=['logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.01,
                   0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.003, 0.003,
                   0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.001, 0.001,
                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.03, 0.03,
                   0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.01, 0.01, 0.01,
                   0.01, 0.01, 0.01, 0.01, 0.01, 0.003, 0.003, 0.003,
                   0.003, 0.003, 0.003, 0.003, 0.003, 0.001, 0.001, 0.001,
                   0.001, 0.001, 0.001, 0.001, 0.001, 0.03, 0.03, 0.03,
                   0.03, 0.03, 0.03, 0.03, 0.03, 0.01, 0.01, 0.01, 0.01,
                   0.01, 0.01, 0.01, 0.01, 0.003, 0.003, 0.003, 0.003,
                   0.003, 0.003, 0.003, 0.003, 0.001, 0.001, 0.001, 0.001,
                   0.001, 0.001, 0.001, 0.001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_hidden_layer_sizes': masked_array(data=[(100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500),
                   (100, 200, 500), (100, 200, 500), (100, 200, 500)],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate_init': masked_array(data=[0.03, 0.03, 0.01, 0.01, 0.003, 0.003, 0.001, 0.001,
                   0.03, 0.03, 0.01, 0.01, 0.003, 0.003, 0.001, 0.001,
                   0.03, 0.03, 0.01, 0.01, 0.003, 0.003, 0.001, 0.001,
                   0.03, 0.03, 0.01, 0.01, 0.003, 0.003, 0.001, 0.001,
                   0.03, 0.03, 0.01, 0.01, 0.003, 0.003, 0.001, 0.001,
                   0.03, 0.03, 0.01, 0.01, 0.003, 0.003, 0.001, 0.001,
                   0.03, 0.03, 0.01, 0.01, 0.003, 0.003, 0.001, 0.001,
                   0.03, 0.03, 0.01, 0.01, 0.003, 0.003, 0.001, 0.001,
                   0.03, 0.03, 0.01, 0.01, 0.003, 0.003, 0.001, 0.001,
                   0.03, 0.03, 0.01, 0.01, 0.003, 0.003, 0.001, 0.001,
                   0.03, 0.03, 0.01, 0.01, 0.003, 0.003, 0.001, 0.001,
                   0.03, 0.03, 0.01, 0.01, 0.003, 0.003, 0.001, 0.001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['lbfgs', 'adam', 'lbfgs', 'adam', 'lbfgs', 'adam',
                   'lbfgs', 'adam', 'lbfgs', 'adam', 'lbfgs', 'adam',
                   'lbfgs', 'adam', 'lbfgs', 'adam', 'lbfgs', 'adam',
                   'lbfgs', 'adam', 'lbfgs', 'adam', 'lbfgs', 'adam',
                   'lbfgs', 'adam', 'lbfgs', 'adam', 'lbfgs', 'adam',
                   'lbfgs', 'adam', 'lbfgs', 'adam', 'lbfgs', 'adam',
                   'lbfgs', 'adam', 'lbfgs', 'adam', 'lbfgs', 'adam',
                   'lbfgs', 'adam', 'lbfgs', 'adam', 'lbfgs', 'adam',
                   'lbfgs', 'adam', 'lbfgs', 'adam', 'lbfgs', 'adam',
                   'lbfgs', 'adam', 'lbfgs', 'adam', 'lbfgs', 'adam',
                   'lbfgs', 'adam', 'lbfgs', 'adam', 'lbfgs', 'adam',
                   'lbfgs', 'adam', 'lbfgs', 'adam', 'lbfgs', 'adam',
                   'lbfgs', 'adam', 'lbfgs', 'adam', 'lbfgs', 'adam',
                   'lbfgs', 'adam', 'lbfgs', 'adam', 'lbfgs', 'adam',
                   'lbfgs', 'adam', 'lbfgs', 'adam', 'lbfgs', 'adam',
                   'lbfgs', 'adam', 'lbfgs', 'adam', 'lbfgs', 'adam'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.03, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.003, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.03, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.01, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003, 'solver': 'adam'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'lbfgs'}, {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (100, 200, 500), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001, 'solver': 'adam'}], 'split0_test_score': array([ 0.01792406,  0.00906953,  0.01813913,  0.01043676,  0.01453228,
       -0.01618058,  0.01501997,  0.01121934,  0.01385682, -0.08667892,
        0.01772191, -0.02853366,  0.01583999,  0.01887662,  0.01438789,
       -0.04207375,  0.01440943, -0.00278894,  0.01476409, -0.0224622 ,
        0.014101  , -0.02639803,  0.0148303 , -0.02767305,  0.01475603,
       -0.02405421,  0.01444061, -0.03140517,  0.01728036, -0.03006322,
        0.0172389 , -0.05687809, -0.07194317, -0.39216965, -0.09658656,
       -0.02571746, -0.08567131, -0.05530484, -0.05983677, -0.05953242,
       -0.09018478, -0.0513657 , -0.05795718, -0.02500521, -0.09773535,
       -0.03526888, -0.07984093, -0.0623542 , -0.07085511, -0.01047983,
       -0.07359022, -0.03796208, -0.086696  , -0.03931874, -0.09725246,
       -0.0488149 , -0.09174836, -0.08734329, -0.06307899, -0.07693206,
       -0.05885025, -0.05406997, -0.07669445, -0.05210219, -0.04373678,
       -0.00311649, -0.03080768,  0.01315464, -0.04597314, -0.03035971,
       -0.05255008, -0.00645044, -0.04047155, -0.00347324, -0.04098892,
       -0.02186112, -0.04666312, -0.02137515, -0.06370348, -0.02123279,
       -0.04944795, -0.00532193, -0.05426514,  0.01224568, -0.04033129,
       -0.02342005, -0.05652084, -0.02996156, -0.04906131,  0.00717117,
       -0.03967866, -0.02872782, -0.03809573, -0.03319013, -0.03708246,
       -0.01462831]), 'split1_test_score': array([-0.07656232,  0.00843735,  0.01948145, -0.18187787, -0.10379182,
        0.03625068,  0.01256528, -0.42507682, -0.01407914,  0.00299443,
       -0.12961036, -0.07848317, -0.03538828, -0.22690563, -0.15491018,
       -0.4069105 , -0.12600358, -0.06602276, -0.06733978, -0.11679197,
       -0.07371556, -0.22238637, -0.04127101, -0.49985373, -0.03314069,
       -0.23779447, -0.26927746, -0.20893614, -0.05419588, -0.1843462 ,
       -0.1147159 , -0.50778485, -1.09372712, -0.17192344, -1.07921257,
       -0.45256997, -0.95054905, -0.56280358, -1.55105778, -0.64794426,
       -1.40115779, -0.00249408, -1.02445143, -0.97485957, -1.35332783,
       -0.34635443, -1.28148141, -0.71410045, -1.13054973, -0.3700652 ,
       -1.32851549, -0.54225298, -1.38479381, -0.75095718, -1.25526188,
       -0.57292045, -1.2948423 , -1.51949358, -1.18297228, -0.09352463,
       -1.47062861, -0.70025944, -1.44917924, -0.96565169, -0.90870627,
       -0.00434408, -0.87584497,  0.02262353, -0.60537972, -0.06339491,
       -1.31778237, -0.17528633, -0.38938229,  0.0180291 , -0.83806136,
       -0.105465  , -0.3138513 , -0.14031119, -0.56241771, -0.24564985,
       -0.51498041,  0.00217934, -0.47005203, -0.14065747, -0.59059753,
       -0.03633964, -0.61276701, -0.43555144, -0.79194094, -0.00815774,
       -0.42777829, -0.09557696, -0.3041702 , -0.36020318, -0.4577463 ,
       -0.25090354]), 'mean_test_score': array([-2.93191278e-02,  8.75343718e-03,  1.88102896e-02, -8.57205592e-02,
       -4.46297671e-02,  1.00350515e-02,  1.37926268e-02, -2.06928739e-01,
       -1.11163311e-04, -4.18422450e-02, -5.59442282e-02, -5.35084123e-02,
       -9.77414313e-03, -1.04014507e-01, -7.02611463e-02, -2.24492126e-01,
       -5.57970750e-02, -3.44058531e-02, -2.62878414e-02, -6.96270836e-02,
       -2.98072787e-02, -1.24392202e-01, -1.32203526e-02, -2.63763390e-01,
       -9.19233150e-03, -1.30924336e-01, -1.27418430e-01, -1.20170656e-01,
       -1.84577575e-02, -1.07204709e-01, -4.87384991e-02, -2.82331467e-01,
       -5.82835146e-01, -2.82046544e-01, -5.87899562e-01, -2.39143716e-01,
       -5.18110182e-01, -3.09054211e-01, -8.05447271e-01, -3.53738336e-01,
       -7.45671285e-01, -2.69298919e-02, -5.41204308e-01, -4.99932392e-01,
       -7.25531592e-01, -1.90811657e-01, -6.80661171e-01, -3.88227323e-01,
       -6.00702419e-01, -1.90272519e-01, -7.01052852e-01, -2.90107530e-01,
       -7.35744907e-01, -3.95137958e-01, -6.76257173e-01, -3.10867674e-01,
       -6.93295332e-01, -8.03418437e-01, -6.23025639e-01, -8.52283418e-02,
       -7.64739434e-01, -3.77164704e-01, -7.62936845e-01, -5.08876940e-01,
       -4.76221524e-01, -3.73028314e-03, -4.53326328e-01,  1.78890832e-02,
       -3.25676430e-01, -4.68773103e-02, -6.85166228e-01, -9.08683863e-02,
       -2.14926919e-01,  7.27792875e-03, -4.39525141e-01, -6.36630603e-02,
       -1.80257214e-01, -8.08431722e-02, -3.13060597e-01, -1.33441320e-01,
       -2.82214181e-01, -1.57129263e-03, -2.62158588e-01, -6.42058929e-02,
       -3.15464411e-01, -2.98798440e-02, -3.34643926e-01, -2.32756497e-01,
       -4.20501124e-01, -4.93288605e-04, -2.33728473e-01, -6.21523888e-02,
       -1.71132964e-01, -1.96696660e-01, -2.47414380e-01, -1.32765923e-01]), 'std_test_score': array([4.72431917e-02, 3.16087877e-04, 6.71157551e-04, 9.61573152e-02,
       5.91620480e-02, 2.62156301e-02, 1.22734250e-03, 2.18148081e-01,
       1.39679813e-02, 4.48366708e-02, 7.36661367e-02, 2.49747541e-02,
       2.56141335e-02, 1.22891124e-01, 8.46490373e-02, 1.82418378e-01,
       7.02065031e-02, 3.16169087e-02, 4.10519359e-02, 4.71648845e-02,
       4.39082802e-02, 9.79941732e-02, 2.80506553e-02, 2.36090342e-01,
       2.39483579e-02, 1.06870130e-01, 1.41859035e-01, 8.87654830e-02,
       3.57381187e-02, 7.71414867e-02, 6.59773992e-02, 2.25453381e-01,
       5.10891973e-01, 1.10123101e-01, 4.91313004e-01, 2.13426257e-01,
       4.32438867e-01, 2.53749374e-01, 7.45610506e-01, 2.94205920e-01,
       6.55486510e-01, 2.44358070e-02, 4.83247124e-01, 4.74927177e-01,
       6.27796243e-01, 1.55542773e-01, 6.00820239e-01, 3.25873125e-01,
       5.29847314e-01, 1.79792685e-01, 6.27462635e-01, 2.52145449e-01,
       6.49048905e-01, 3.55819217e-01, 5.79004711e-01, 2.62052776e-01,
       6.01546971e-01, 7.16075148e-01, 5.59946645e-01, 8.29628462e-03,
       7.05889180e-01, 3.23094737e-01, 6.86242394e-01, 4.56774750e-01,
       4.32484743e-01, 6.13794033e-04, 4.22518646e-01, 4.73444802e-03,
       2.79703294e-01, 1.65176008e-02, 6.32616146e-01, 8.44179473e-02,
       1.74455373e-01, 1.07511710e-02, 3.98536222e-01, 4.18019389e-02,
       1.33594090e-01, 5.94680176e-02, 2.49357113e-01, 1.12208526e-01,
       2.32766232e-01, 3.75063651e-03, 2.07893445e-01, 7.64515737e-02,
       2.75133118e-01, 6.45979489e-03, 2.78123089e-01, 2.02794940e-01,
       3.71439813e-01, 7.66445511e-03, 1.94049814e-01, 3.34245735e-02,
       1.33037238e-01, 1.63506525e-01, 2.10331916e-01, 1.18137614e-01]), 'rank_test_score': array([17,  5,  1, 35, 22,  4,  3, 50,  7, 21, 27, 25, 12, 37, 32, 52, 26,
       20, 15, 31, 18, 40, 13, 58, 11, 42, 41, 39, 14, 38, 24, 61, 81, 59,
       82, 55, 79, 63, 96, 69, 92, 16, 80, 77, 90, 48, 86, 71, 83, 47, 89,
       62, 91, 72, 85, 64, 88, 95, 84, 34, 94, 70, 93, 78, 76, 10, 75,  2,
       67, 23, 87, 36, 51,  6, 74, 29, 46, 33, 65, 44, 60,  9, 57, 30, 66,
       19, 68, 53, 73,  8, 54, 28, 45, 49, 56, 43], dtype=int32), 'split0_train_score': array([ 0.05942848,  0.03300296,  0.05568613,  0.0398739 ,  0.06466358,
       -0.11062071,  0.06863001,  0.00883916,  0.06528991,  0.27846162,
        0.05730294,  0.78085299,  0.06082769,  0.05958585,  0.06208392,
        0.69163816,  0.06516037,  0.02633637,  0.06278197,  0.83744205,
        0.06325843,  0.84913689,  0.06387993,  0.83255349,  0.06373733,
        0.59483109,  0.06642912,  0.86348219,  0.06041036,  0.84465648,
        0.05992362,  0.79532162,  0.79170651, -1.30614498,  0.77973219,
        0.60058418,  0.787074  ,  0.89629706,  0.80672472,  0.95605481,
        0.79721651,  0.23760537,  0.81572595,  0.22006006,  0.77811997,
        0.91240225,  0.79622664,  0.96169975,  0.81919047,  0.05149585,
        0.8035382 ,  0.55445052,  0.78766196,  0.94262091,  0.78499427,
        0.98143775,  0.79577171, -0.31339014,  0.83570278,  0.09573484,
        0.79348356,  0.96911867,  0.7966403 ,  0.97614665,  0.97155131,
        0.07955198,  0.96184538,  0.11664219,  0.97485981,  0.88679312,
        0.97857305,  0.90285375,  0.97549052,  0.00345832,  0.96072426,
        0.55858116,  0.97689028,  0.87961173,  0.97043159,  0.93955395,
        0.97347152,  0.12866065,  0.97079441,  0.29066535,  0.96582044,
        0.87230622,  0.97338933,  0.96717246,  0.97593476,  0.09339049,
        0.96775799,  0.32699786,  0.97062217,  0.89755886,  0.9654461 ,
        0.94756475]), 'split1_train_score': array([ 5.90015379e-01,  1.34941415e-02,  5.94092272e-01,  8.06211324e-01,
        6.43622984e-01,  2.51235284e-02,  5.95840531e-01,  7.40878788e-01,
        5.95495091e-01,  3.58042027e-03,  2.82635975e-01,  6.04654066e-01,
        5.75573601e-01,  9.16905101e-01,  3.95736683e-01,  7.74736425e-01,
        7.35998195e-02,  8.81943767e-02,  7.69777371e-02,  8.74705557e-01,
        5.86667692e-01,  9.31899719e-01,  5.65171836e-02,  8.18322869e-01,
        5.98131532e-01,  1.27717959e-01,  5.46279283e-01,  8.40381952e-01,
        2.70953084e-01,  8.71720188e-01,  7.97273766e-02,  8.60239968e-01,
        8.72238313e-01, -1.45827832e-03,  8.75102036e-01,  6.50182087e-02,
        8.88824901e-01,  8.66230242e-01,  8.53495246e-01,  9.40201577e-01,
        8.58058249e-01,  7.96878888e-03,  8.74123383e-01,  4.68502855e-01,
        8.85541096e-01,  7.17701541e-01,  8.68108011e-01,  9.39333552e-01,
        8.77732097e-01, -8.10905942e-02,  8.47135668e-01,  5.77019136e-01,
        8.55275898e-01,  9.52429500e-01,  8.57789631e-01,  9.76043098e-01,
        8.53130883e-01, -3.94804126e-01,  8.75926183e-01,  6.07309006e-02,
        8.49982797e-01,  5.48136369e-01,  8.50067627e-01,  9.65322426e-01,
        9.52471657e-01, -5.74764198e-05,  9.50890957e-01,  5.33984642e-02,
        9.39275490e-01,  2.01651267e-01,  9.59507107e-01,  8.60449476e-01,
        9.48222869e-01,  5.14288325e-02,  9.34304977e-01,  3.53089767e-02,
        9.52995716e-01,  5.73891612e-01,  9.55695570e-01,  9.37412475e-01,
        9.45312172e-01,  1.44493088e-02,  9.40926963e-01,  1.55146539e-01,
        9.48425735e-01,  4.13528677e-01,  9.54921107e-01,  9.46931220e-01,
        9.57634556e-01,  2.43198466e-03,  9.47602789e-01,  4.76852598e-02,
        9.30778224e-01,  6.07469737e-01,  9.48026979e-01,  8.89656677e-01]), 'mean_train_score': array([ 0.32472193,  0.02324855,  0.3248892 ,  0.42304261,  0.35414328,
       -0.04274859,  0.33223527,  0.37485897,  0.3303925 ,  0.14102102,
        0.16996946,  0.69275353,  0.31820065,  0.48824548,  0.2289103 ,
        0.73318729,  0.0693801 ,  0.05726537,  0.06987985,  0.8560738 ,
        0.32496306,  0.8905183 ,  0.06019856,  0.82543818,  0.33093443,
        0.36127453,  0.3063542 ,  0.85193207,  0.16568172,  0.85818834,
        0.0698255 ,  0.82778079,  0.83197241, -0.65380163,  0.82741711,
        0.33280119,  0.83794945,  0.88126365,  0.83010999,  0.94812819,
        0.82763738,  0.12278708,  0.84492467,  0.34428146,  0.83183053,
        0.81505189,  0.83216733,  0.95051665,  0.84846128, -0.01479737,
        0.82533694,  0.56573483,  0.82146893,  0.9475252 ,  0.82139195,
        0.97874042,  0.8244513 , -0.35409713,  0.85581448,  0.07823287,
        0.82173318,  0.75862752,  0.82335396,  0.97073454,  0.96201148,
        0.03974725,  0.95636817,  0.08502033,  0.95706765,  0.54422219,
        0.96904008,  0.88165161,  0.96185669,  0.02744357,  0.94751462,
        0.29694507,  0.964943  ,  0.72675167,  0.96306358,  0.93848321,
        0.95939185,  0.07155498,  0.95586069,  0.22290594,  0.95712309,
        0.64291745,  0.96415522,  0.95705184,  0.96678466,  0.04791124,
        0.95768039,  0.18734156,  0.9507002 ,  0.7525143 ,  0.95673654,
        0.91861071]), 'std_train_score': array([0.26529345, 0.00975441, 0.26920307, 0.38316871, 0.2894797 ,
       0.06787212, 0.26360526, 0.36601981, 0.26510259, 0.1374406 ,
       0.11266652, 0.08809946, 0.25737295, 0.42865963, 0.16682638,
       0.04154913, 0.00421972, 0.03092901, 0.00709788, 0.01863175,
       0.26170463, 0.04138142, 0.00368137, 0.00711531, 0.2671971 ,
       0.23355657, 0.23992508, 0.01155012, 0.10527136, 0.01353185,
       0.00990188, 0.03245917, 0.0402659 , 0.65234335, 0.04768493,
       0.26778299, 0.05087545, 0.01503341, 0.02338526, 0.00792662,
       0.03042087, 0.11481829, 0.02919872, 0.1242214 , 0.05371056,
       0.09735035, 0.03594069, 0.0111831 , 0.02927081, 0.06629322,
       0.02179873, 0.01128431, 0.03380697, 0.0049043 , 0.03639768,
       0.00269732, 0.02867959, 0.04070699, 0.0201117 , 0.01750197,
       0.02824962, 0.21049115, 0.02671366, 0.00541211, 0.00953983,
       0.03980473, 0.00547721, 0.03162186, 0.01779216, 0.34257092,
       0.00953297, 0.02120213, 0.01363382, 0.02398526, 0.01320964,
       0.26163609, 0.01194728, 0.15286006, 0.00736801, 0.00107074,
       0.01407967, 0.05710567, 0.01493372, 0.0677594 , 0.00869735,
       0.22938877, 0.00923411, 0.01012062, 0.0091501 , 0.04547925,
       0.0100776 , 0.1396563 , 0.01992198, 0.14504456, 0.00870956,
       0.02895404])} 
  
 Best Estimator: 
 MLPRegressor(activation='logistic', alpha=0.03, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 200, 500), learning_rate='adaptive',
       learning_rate_init=0.01, max_iter=200, momentum=0.9,
       n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='lbfgs', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False) 
 with 0.018810289564545335
