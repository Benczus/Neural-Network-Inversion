{'hidden_layer_sizes': [(10, 20, 40, 20, 10), (30, 90, 180, 90, 30), (100, 400, 100), (1000, 2000)], 'activation': ['logistic', 'tanh', 'relu'], 'solver': ['lbfgs', 'sgd', 'adam']} 
 
 {'mean_fit_time': array([4.39607143e-01, 2.01646209e+00, 3.37456154e+01, 2.12255800e+00,
       6.73627090e+00, 8.20664102e+01, 8.83929658e+01, 5.92219174e+00,
       1.02129718e+02, 1.05883798e+03, 3.24541705e+02, 4.30589605e+02,
       1.93043680e+01, 1.78589751e+01, 3.17889502e+01, 8.11455410e+01,
       6.86670046e+01, 7.05705364e+01, 1.03517421e+02, 9.90111631e+01,
       6.33116213e+01, 1.11418427e+03, 2.10397687e+03, 1.73760788e+03,
       1.18858396e+01, 4.46081471e+00, 1.74889952e+01, 5.43346264e+01,
       7.04180418e+01, 4.11117303e+01, 7.48241106e+01, 9.89347539e+01,
       3.65660974e+01, 9.83662468e+02, 2.13005715e+03, 7.61484522e+02]), 'std_fit_time': array([1.01203918e-01, 1.74848557e-01, 2.42812502e+00, 3.02507281e-01,
       1.35999918e-01, 3.66164935e+00, 1.95670128e-03, 1.21425033e-01,
       1.72989011e-01, 2.59720633e+01, 1.61904501e+02, 7.57427394e+00,
       4.49585915e-03, 1.05237120e+01, 5.29572487e-01, 9.72492695e-01,
       4.76950407e-01, 7.35592079e+00, 9.21402705e+00, 1.27557313e+00,
       4.33424795e+00, 2.47980267e+01, 1.72665521e+01, 9.48816165e+01,
       1.91642225e+00, 5.20029068e-02, 6.89666152e-01, 7.99370718e+00,
       1.00516030e+01, 3.72231817e+00, 2.29680264e+00, 2.36600113e+00,
       2.66715288e-02, 2.91727602e+01, 8.55790818e+01, 1.39485562e+02]), 'mean_score_time': array([0.06720197, 0.0494014 , 0.05700088, 0.26101124, 0.18900132,
       0.13380086, 0.18960583, 0.19900489, 0.20450532, 2.3529619 ,
       1.53321457, 1.82680452, 0.05560029, 0.05770171, 0.06160057,
       0.18100595, 0.13850784, 0.20101154, 0.22551286, 0.21201217,
       0.25901484, 2.54048991, 2.37771344, 1.79550314, 0.02340007,
       0.04680026, 0.0321008 , 0.08700073, 0.09410012, 0.08830237,
       0.14040029, 0.15650451, 0.15850258, 1.92044795, 1.73879123,
       1.1446538 ]), 'std_score_time': array([4.80210781e-03, 2.60126591e-03, 5.99956512e-03, 4.99665737e-03,
       1.30007267e-02, 5.00047207e-03, 5.94973564e-04, 2.14576721e-06,
       3.10122967e-03, 6.06357932e-01, 3.95905972e-02, 2.87199616e-01,
       2.44001150e-02, 4.69863415e-03, 1.48004293e-02, 2.38418579e-07,
       3.50022316e-03, 9.00042057e-03, 5.00082970e-04, 3.00014019e-03,
       3.00002098e-03, 1.13048720e+00, 5.51609278e-01, 4.52997684e-02,
       7.79986382e-03, 1.56000853e-02, 9.00864601e-04, 6.59954548e-03,
       5.00082970e-04, 1.90091133e-03, 1.19209290e-07, 5.04374504e-04,
       5.10168076e-03, 5.33609986e-01, 5.68340778e-01, 1.69944763e-02]), 'param_activation': masked_array(data=['logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic',
                   'logistic', 'logistic', 'logistic', 'logistic', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh', 'tanh',
                   'tanh', 'tanh', 'tanh', 'tanh', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_hidden_layer_sizes': masked_array(data=[(10, 20, 40, 20, 10), (10, 20, 40, 20, 10),
                   (10, 20, 40, 20, 10), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (100, 400, 100), (100, 400, 100), (100, 400, 100),
                   (1000, 2000), (1000, 2000), (1000, 2000),
                   (10, 20, 40, 20, 10), (10, 20, 40, 20, 10),
                   (10, 20, 40, 20, 10), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (100, 400, 100), (100, 400, 100), (100, 400, 100),
                   (1000, 2000), (1000, 2000), (1000, 2000),
                   (10, 20, 40, 20, 10), (10, 20, 40, 20, 10),
                   (10, 20, 40, 20, 10), (30, 90, 180, 90, 30),
                   (30, 90, 180, 90, 30), (30, 90, 180, 90, 30),
                   (100, 400, 100), (100, 400, 100), (100, 400, 100),
                   (1000, 2000), (1000, 2000), (1000, 2000)],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam',
                   'lbfgs', 'sgd', 'adam', 'lbfgs', 'sgd', 'adam'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'activation': 'logistic', 'hidden_layer_sizes': (10, 20, 40, 20, 10), 'solver': 'lbfgs'}, {'activation': 'logistic', 'hidden_layer_sizes': (10, 20, 40, 20, 10), 'solver': 'sgd'}, {'activation': 'logistic', 'hidden_layer_sizes': (10, 20, 40, 20, 10), 'solver': 'adam'}, {'activation': 'logistic', 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'solver': 'lbfgs'}, {'activation': 'logistic', 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'solver': 'sgd'}, {'activation': 'logistic', 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'solver': 'adam'}, {'activation': 'logistic', 'hidden_layer_sizes': (100, 400, 100), 'solver': 'lbfgs'}, {'activation': 'logistic', 'hidden_layer_sizes': (100, 400, 100), 'solver': 'sgd'}, {'activation': 'logistic', 'hidden_layer_sizes': (100, 400, 100), 'solver': 'adam'}, {'activation': 'logistic', 'hidden_layer_sizes': (1000, 2000), 'solver': 'lbfgs'}, {'activation': 'logistic', 'hidden_layer_sizes': (1000, 2000), 'solver': 'sgd'}, {'activation': 'logistic', 'hidden_layer_sizes': (1000, 2000), 'solver': 'adam'}, {'activation': 'tanh', 'hidden_layer_sizes': (10, 20, 40, 20, 10), 'solver': 'lbfgs'}, {'activation': 'tanh', 'hidden_layer_sizes': (10, 20, 40, 20, 10), 'solver': 'sgd'}, {'activation': 'tanh', 'hidden_layer_sizes': (10, 20, 40, 20, 10), 'solver': 'adam'}, {'activation': 'tanh', 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'solver': 'lbfgs'}, {'activation': 'tanh', 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'solver': 'sgd'}, {'activation': 'tanh', 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'solver': 'adam'}, {'activation': 'tanh', 'hidden_layer_sizes': (100, 400, 100), 'solver': 'lbfgs'}, {'activation': 'tanh', 'hidden_layer_sizes': (100, 400, 100), 'solver': 'sgd'}, {'activation': 'tanh', 'hidden_layer_sizes': (100, 400, 100), 'solver': 'adam'}, {'activation': 'tanh', 'hidden_layer_sizes': (1000, 2000), 'solver': 'lbfgs'}, {'activation': 'tanh', 'hidden_layer_sizes': (1000, 2000), 'solver': 'sgd'}, {'activation': 'tanh', 'hidden_layer_sizes': (1000, 2000), 'solver': 'adam'}, {'activation': 'relu', 'hidden_layer_sizes': (10, 20, 40, 20, 10), 'solver': 'lbfgs'}, {'activation': 'relu', 'hidden_layer_sizes': (10, 20, 40, 20, 10), 'solver': 'sgd'}, {'activation': 'relu', 'hidden_layer_sizes': (10, 20, 40, 20, 10), 'solver': 'adam'}, {'activation': 'relu', 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'solver': 'lbfgs'}, {'activation': 'relu', 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'solver': 'sgd'}, {'activation': 'relu', 'hidden_layer_sizes': (30, 90, 180, 90, 30), 'solver': 'adam'}, {'activation': 'relu', 'hidden_layer_sizes': (100, 400, 100), 'solver': 'lbfgs'}, {'activation': 'relu', 'hidden_layer_sizes': (100, 400, 100), 'solver': 'sgd'}, {'activation': 'relu', 'hidden_layer_sizes': (100, 400, 100), 'solver': 'adam'}, {'activation': 'relu', 'hidden_layer_sizes': (1000, 2000), 'solver': 'lbfgs'}, {'activation': 'relu', 'hidden_layer_sizes': (1000, 2000), 'solver': 'sgd'}, {'activation': 'relu', 'hidden_layer_sizes': (1000, 2000), 'solver': 'adam'}], 'split0_test_score': array([-2.86911350e-05, -7.62323925e-05, -4.02179566e-01, -3.18024742e-05,
       -1.27485952e-04, -5.50375921e-01, -7.43280936e-02, -3.30617049e-04,
       -6.12883715e-01,  2.36679394e-02, -2.68574279e-02, -3.37581238e-03,
       -1.95085835e-01,  1.70692029e-02, -4.27650356e-01, -2.79474005e-01,
       -1.65757469e-02, -4.32731266e-01, -4.00007826e-01, -3.24130741e-02,
       -6.26672536e-01, -3.14086120e-01,  9.84736532e-03, -6.74367274e-01,
       -9.42393851e-02,  1.32771508e-03, -4.74595481e-01, -3.08280090e-01,
       -5.16538943e-02, -2.87154580e-01, -2.99792385e-01, -1.16760994e-01,
       -1.27303318e-01, -3.29569586e-01, -8.64342443e-02, -1.28887238e-01]), 'split1_test_score': array([-2.87222151e-05, -6.48659629e-06, -1.37022680e-01, -2.43295810e-05,
       -6.49459320e-04, -2.13932257e-01,  1.30160453e-02, -3.01820734e-03,
       -1.79817574e-01,  3.48690978e-02,  1.52181923e-03,  3.88391400e-02,
       -5.78726851e-01,  1.18578994e-02, -5.92154734e-01, -3.16334365e-01,
        1.58927283e-02, -3.77991343e-01, -3.62403005e-01, -5.51257357e-03,
       -6.46373837e-01, -2.23690489e-01,  3.12256906e-02, -7.59344450e-01,
       -3.67696767e-01,  5.10532798e-03, -5.07591289e-01, -2.30065501e-01,
       -7.21858129e-02, -1.68073936e-01, -2.20111274e-01, -2.40115154e-02,
       -1.01922752e-01, -3.48326522e-01, -2.30148809e-02, -6.71435468e-02]), 'mean_test_score': array([-2.87066740e-05, -4.13618923e-05, -2.69610239e-01, -2.80662845e-05,
       -3.88454690e-04, -3.82165656e-01, -3.06590271e-02, -1.67431979e-03,
       -3.96365533e-01,  2.92681335e-02, -1.26687800e-02,  1.77302124e-02,
       -3.86893153e-01,  1.44637303e-02, -5.09896889e-01, -2.97902918e-01,
       -3.42625575e-04, -4.05363186e-01, -3.81206708e-01, -1.89637487e-02,
       -6.36522509e-01, -2.68891413e-01,  2.05357930e-02, -7.16852940e-01,
       -2.30958674e-01,  3.21639165e-03, -4.91092250e-01, -2.69175485e-01,
       -6.19191477e-02, -2.27618352e-01, -2.59954569e-01, -7.03894434e-02,
       -1.14613907e-01, -3.38947409e-01, -5.47267430e-02, -9.80175150e-02]), 'std_test_score': array([1.55400581e-08, 3.48728980e-05, 1.32578443e-01, 3.73644661e-06,
       2.60986683e-04, 1.68221832e-01, 4.36720694e-02, 1.34379514e-03,
       2.16533070e-01, 5.60057921e-03, 1.41896235e-02, 2.11074761e-02,
       1.91820508e-01, 2.60565172e-03, 8.22521890e-02, 1.84301803e-02,
       1.62342376e-02, 2.73699617e-02, 1.88024109e-02, 1.34502502e-02,
       9.85065026e-03, 4.51978156e-02, 1.06891626e-02, 4.24885881e-02,
       1.36728690e-01, 1.88880644e-03, 1.64979039e-02, 3.91072942e-02,
       1.02659592e-02, 5.95403221e-02, 3.98405555e-02, 4.63747392e-02,
       1.26902830e-02, 9.37846799e-03, 3.17096816e-02, 3.08718454e-02]), 'rank_test_score': array([ 7,  8, 25,  6, 10, 29, 14, 11, 31,  1, 12,  3, 30,  4, 34, 26,  9,
       32, 28, 13, 35, 23,  2, 36, 21,  5, 33, 24, 16, 20, 22, 17, 19, 27,
       15, 18]), 'split0_train_score': array([ 9.52632567e-06, -1.14267552e-05,  4.78743638e-01,  3.54027555e-06,
       -2.69386650e-04,  4.98549688e-01,  2.43182722e-01, -5.29474400e-04,
        8.15484921e-01,  5.99644653e-02, -2.33128762e-02,  3.43983849e-02,
        5.37661491e-01,  7.24077969e-02,  6.58145683e-01,  8.70273818e-01,
        1.54772759e-01,  9.17844834e-01,  8.66552999e-01,  2.23607214e-01,
        9.79192511e-01,  5.44839857e-01,  1.50115623e-01,  9.73531954e-01,
        6.43587840e-01,  4.97224876e-03,  7.54036755e-01,  8.95031536e-01,
        2.38903206e-01,  9.75239310e-01,  9.73637141e-01,  4.85257496e-01,
        9.70907639e-01,  9.91744305e-01,  5.10186754e-01,  9.42683594e-01]), 'split1_train_score': array([ 4.69598657e-06,  3.80803612e-06,  2.62373376e-01,  3.86775273e-06,
       -4.22940383e-04,  6.20438057e-01,  9.95798869e-02, -2.66440187e-03,
        7.08597964e-01,  4.12402411e-02,  1.75825829e-03,  4.16586936e-02,
        5.80949989e-01,  1.12608591e-02,  6.97771938e-01,  8.88746184e-01,
        1.10764598e-01,  9.78952162e-01,  8.76755215e-01,  1.74656772e-01,
        9.73549717e-01,  4.68475874e-01,  9.38782520e-02,  9.69586910e-01,
        6.44082886e-01,  5.43661138e-03,  6.93585341e-01,  8.40459231e-01,
        3.38763814e-01,  9.68194535e-01,  9.77828013e-01,  3.48661770e-01,
        9.55428147e-01,  9.92377323e-01,  4.55113256e-01,  9.73601306e-01]), 'mean_train_score': array([ 7.11115612e-06, -3.80935955e-06,  3.70558507e-01,  3.70401414e-06,
       -3.46163516e-04,  5.59493873e-01,  1.71381304e-01, -1.59693813e-03,
        7.62041443e-01,  5.06023532e-02, -1.07773089e-02,  3.80285392e-02,
        5.59305740e-01,  4.18343280e-02,  6.77958810e-01,  8.79510001e-01,
        1.32768679e-01,  9.48398498e-01,  8.71654107e-01,  1.99131993e-01,
        9.76371114e-01,  5.06657866e-01,  1.21996938e-01,  9.71559432e-01,
        6.43835363e-01,  5.20443007e-03,  7.23811048e-01,  8.67745384e-01,
        2.88833510e-01,  9.71716923e-01,  9.75732577e-01,  4.16959633e-01,
        9.63167893e-01,  9.92060814e-01,  4.82650005e-01,  9.58142450e-01]), 'std_train_score': array([2.41516955e-06, 7.61739567e-06, 1.08185131e-01, 1.63738586e-07,
       7.67768664e-05, 6.09441845e-02, 7.18014175e-02, 1.06746373e-03,
       5.34434783e-02, 9.36211209e-03, 1.25355672e-02, 3.63015436e-03,
       2.16442491e-02, 3.05734689e-02, 1.98131277e-02, 9.23618314e-03,
       2.20040809e-02, 3.05536644e-02, 5.10110784e-03, 2.44752208e-02,
       2.82139749e-03, 3.81819913e-02, 2.81186856e-02, 1.97252200e-03,
       2.47522947e-04, 2.32181307e-04, 3.02257070e-02, 2.72861524e-02,
       4.99303042e-02, 3.52238742e-03, 2.09543608e-03, 6.82978632e-02,
       7.73974591e-03, 3.16508517e-04, 2.75367489e-02, 1.54588560e-02])} 
  
 Best Estimator: 
 MLPRegressor(activation='logistic', alpha=0.0001, batch_size='auto',
       beta_1=0.9, beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(1000, 2000), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='lbfgs', tol=0.0001,
       validation_fraction=0.1, verbose=True, warm_start=False) 
 with 0.029268133519428443
